{"version":3,"sources":["store/state.ts","pages/create-task/subforms/Functional.tsx","pages/create-task/subforms/Variables.tsx","pages/create-task/subforms/Management.tsx","pages/create-task/subforms/Derivatives.tsx","pages/create-task/subforms/Method.tsx","pages/create-task/CreateTask.tsx","pages/history/History.tsx","App.tsx","serviceWorker.ts","store/createReducer.ts","store/task-reducer/functional-reducer.ts","store/task-reducer/variables-reducer.ts","store/task-reducer/management-reducer.ts","store/task-reducer/derivatives-reducer.ts","store/task-reducer/index.ts","store/index.ts","index.tsx"],"names":["TaskStep","useStyles","makeStyles","theme","block","marginTop","spacing","connect","state","functional","editingTask","functionalStep","validity","validation","dispatch","updateFunctional","payload","type","updateConstant","constantIndex","prop","value","target","addConstant","removeConstant","_ref","classes","handleChange","key","Object","objectSpread","defineProperty","react_default","a","createElement","Paper","className","TextField","label","error","valid","passed","onChange","FormHelperText","FormControl","FormControlLabel","control","Checkbox","hasIntegralPart","t0","T","Typography","variant","Table","TableHead","TableRow","TableCell","TableBody","constants","map","constant","i","component","scope","concat","IconButton","onClick","Delete_default","Button","variables","variableStep","addVariable","updateVariable","removeVariable","handleVarChange","var","vars","index","variable","f","p","xt0","pT","disabled","length","tableHeader","maxWidth","tkField","marginLeft","center","alignSelf","management","managementStep","addManager","updateManager","removeManager","updateDudv","j","manager","dudv","updateV","k","interval","v","updateTk","addParameter","removeParameter","parameter","addTimeSwitcher","removeTimeSwitcher","timeswitcher","u","s","row","tk","t","derivatives","derivativeStep","updateDfDx","fIndex","xIndex","dfdx","updateDfDu","uIndex","dfdu","Method","initialState","g","dgdu","dgdx","methodStep","name","step","descr","task","history","root","width","button","marginRight","actionsContainer","marginBottom","resetContainer","padding","updateValidity","reset","_React$useState","React","useState","_React$useState2","slicedToArray","activeStep","setActiveStep","steps","content","subforms_Functional","subforms_Variables","subforms_Management","subforms_Derivatives","subforms_Method","handleStep","validityStep","square","elevation","Stepper","nonLinear","orientation","Step","StepButton","disableRipple","StepLabel","StepContent","History","App","react_router_dom","src","alt","to","exact","activeClassName","react_router","path","CreateTask","Boolean","window","location","hostname","match","consumer","functional_reducer","FUNCTIONAL_UPDATE","action","every","CONSTANT_ADD","toConsumableArray","CONSTANT_UPDATE","slice","CONSTANT_REMOVE","filter","variables_reducer","VARIABLE_UPDATE","VARIABLE_ADD","allVars","newDfDx","Array","fill","newDfDu","VARIABLE_REMOVE","leftVars","management_reducer","MANAGER_ADD","withNewManager","m","MANAGER_UPDATE","updatingManager","withEdittedManager","MANAGER_REMOVE","withDelettedManager","DUDV_UPDATE","V_UPDATE","TK_UPDATE","PARAMETER_ADD","managerWithNewParameter","withNewParametr","PARAMETER_REMOVE","managerWithDelettingParameter","withDeletedParameter","TIMESWITCHER_ADD","mangerWithNewTimeSwitcher","withNewTimeSwitcher","TIMESWITCHER_REMOVE","managerWithDelettingTimeSwitcher","withDeletedTimeSwitcher","derivatives_reducer","DFDX_UPDATE","DFDU_UPDATE","createReducer","functionalReducer","variablesReducer","managementReducer","derivativesReducer","VALIDITY_UPDATE","RESET","arguments","undefined","_unused","createStore","taskReducer","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qGAuBYA,uSCbNC,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,OA2GhBC,cACX,SAACC,GAAD,MAAoB,CAChBC,WAAYD,EAAME,YAAYC,eAC9BC,SAAUJ,EAAME,YAAYG,WAAWF,iBAE3C,SAAAG,GAAQ,MAAK,CACTC,iBAAkB,SAACC,GAAD,OAA0BF,EAAS,CAAEG,KAAM,oBAAqBD,aAClFE,eAAgB,SAACC,EAAuBC,GAAxB,OAAkD,SAACJ,GAAD,OAAkBF,EAAS,CAAEG,KAAM,kBAAmBD,QAAS,CAC7HG,gBACAC,OACAC,MAAOL,EAAQM,OAAOD,WAE1BE,YAAa,kBAAMT,EAAS,CAAEG,KAAM,kBACpCO,eAAgB,SAACR,GAAD,OAAqB,kBAAMF,EAAS,CAAEG,KAAM,kBAAmBD,gBAbxET,CA9FyB,SAAAkB,GAA2F,IAAzFhB,EAAyFgB,EAAzFhB,WAAYG,EAA6Ea,EAA7Eb,SAAUG,EAAmEU,EAAnEV,iBAAkBG,EAAiDO,EAAjDP,eAAgBK,EAAiCE,EAAjCF,YAAaC,EAAoBC,EAApBD,eACjGE,EAAUzB,IACV0B,EAAe,SAACC,GAAD,OAA4B,SAACZ,GAC9CD,EAAiBc,OAAAC,EAAA,EAAAD,CAAA,GACVpB,EADSoB,OAAAE,EAAA,EAAAF,CAAA,GAEXD,EAAMZ,EAAQM,OAAOD,WAI9B,OACIW,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,UAAU,gBACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIC,MAAM,wFACNC,OAAQ3B,EAAS4B,OAAS5B,EAAS6B,SAAWhC,EAAWA,WACzDiC,SAAUf,EAAa,cACvBN,MAAOZ,EAAWA,cAEpBG,EAAS4B,OAAS5B,EAAS6B,SAAWhC,EAAWA,YAC/CuB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAgBJ,OAAO,GAAvB,kMAEJP,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACIZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACIC,QACAd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAU1B,MAAOZ,EAAWuC,gBAAiBN,SAAUf,EAAa,qBAEpEW,MAAM,sIAGdN,EAAAC,EAAAC,cAAA,OAAKE,UAAWV,EAAQtB,MAAQ,QAC5B4B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIC,MAAM,yIACNI,SAAUf,EAAa,MACvBV,KAAK,SACLI,MAAOZ,EAAWwC,KAEtBjB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIC,MAAM,mIACNI,SAAUf,EAAa,KACvBV,KAAK,SACLI,MAAOZ,EAAWyC,KAG1BlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYC,QAAQ,KAAKhB,UAAWV,EAAQtB,OAA5C,0DAGA4B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACIrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACItB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACIvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,2BACAxB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,2DAGRxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACKhD,EAAWiD,UAAUC,IAAI,SAACC,EAAUC,GAAX,OACtB7B,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAU3B,IAAKiC,GACX7B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAWM,UAAU,KAAKC,MAAM,MAAM3B,UAAU,OAC5CJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIK,SAAUxB,EAAe2C,EAAG,OAC5BvB,MAAK,4EAAA0B,OAAkBH,GACvBtB,OAAQ3B,EAAS4B,OAAS5B,EAAS6B,SAAWmB,EAAShC,IACvDP,MAAOuC,EAAShC,OAClBhB,EAAS4B,OAAS5B,EAAS6B,SAAWmB,EAAShC,KAC7CI,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAgBJ,OAAO,GAAvB,yHAGRP,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAWpB,UAAU,UACjBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIK,SAAUxB,EAAe2C,EAAG,SAC5BvB,MAAK,0GAAA0B,OAAuBH,GAC5BtB,OAAQ3B,EAAS4B,OAAS5B,EAAS6B,SAAWmB,EAASvC,MACvDJ,KAAK,SACLI,MAAOuC,EAASvC,SAClBT,EAAS4B,OAAS5B,EAAS6B,SAAWmB,EAASvC,OAC7CW,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAgBJ,OAAO,GAAvB,uJAGRP,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAWpB,UAAU,UACjBJ,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAYC,QAAS1C,EAAeqC,IAChC7B,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,aAOxBD,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQF,QAAS3C,GAAjB,8GCxGVtB,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,OAqEhBC,cACX,SAACC,GAAD,MAAoB,CAChB6D,UAAW7D,EAAME,YAAY4D,aAC7B1D,SAAUJ,EAAME,YAAYG,WAAWyD,eAE3C,SAAAxD,GAAQ,MAAK,CACTyD,YAAa,kBAAMzD,EAAS,CAAEG,KAAM,kBACpCuD,eAAgB,SAACxD,GAAD,OAA8CF,EAAS,CAAEG,KAAM,kBAAmBD,aAClGyD,eAAgB,SAACzD,GAAD,OAAqB,kBAAMF,EAAS,CAAEG,KAAM,kBAAmBD,gBARxET,CA1DuB,SAAAkB,GAAwE,IAAtE4C,EAAsE5C,EAAtE4C,UAAWzD,EAA2Da,EAA3Db,SAAU2D,EAAiD9C,EAAjD8C,YAAaC,EAAoC/C,EAApC+C,eAAgBC,EAAoBhD,EAApBgD,eAChF/C,EAAUzB,IACVyE,EAAkB,SAAC9C,EAAsBiC,GAAvB,OAAqC,SAAC7C,GAAD,OAAkBwD,EAAe,CAC1FG,IAAI9C,OAAAC,EAAA,EAAAD,CAAA,GACGwC,EAAUO,KAAKf,GADnBhC,OAAAE,EAAA,EAAAF,CAAA,GAEED,EAAMZ,EAAQM,OAAOD,QAE1BwD,MAAOhB,MAEX,OACI7B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACViC,EAAUO,KAAKjB,IAAI,SAACmB,EAAUjB,GAAX,OAChB7B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,UAAU,eAAeR,IAAKiC,GACjC7B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIC,MAAO,sJAAgCuB,EACvCtB,OAAQ3B,EAAS4B,OAAS5B,EAAS6B,SAAWqC,EAASC,EACvDrC,SAAUgC,EAAgB,IAAKb,GAC/BxC,MAAOyD,EAASC,KAElBnE,EAAS4B,OAAS5B,EAAS6B,SAAWqC,EAASC,GAC7C/C,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAgBJ,OAAO,GAAO,2FAAuBsB,EAAI,OAE7D7B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIC,MAAO,8KAAoCuB,EAC3CtB,OAAQ3B,EAAS4B,OAAS5B,EAAS6B,SAAWqC,EAASE,EACvDtC,SAAUgC,EAAgB,IAAKb,GAC/BxC,MAAOyD,EAASE,KAElBpE,EAAS4B,OAAS5B,EAAS6B,SAAWqC,EAASE,GAC7ChD,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAgBJ,OAAO,GAAO,0FAAsBsB,GAExD7B,EAAAC,EAAAC,cAAA,OAAKE,UAAWV,EAAQtB,MAAQ,QAC5B4B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIC,MAAO,mNAA2CuB,EAClDnB,SAAUgC,EAAgB,MAAOb,GACjC5C,KAAK,SACLI,MAAOyD,EAASG,MAEpBjD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIC,MAAO,qOAA8CuB,EACrDnB,SAAUgC,EAAgB,KAAMb,GAChC5C,KAAK,SACLI,MAAOyD,EAASI,MAGxBlD,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAY7B,UAAU,YAAY8B,QAASO,EAAeZ,GAAIsB,SAAoC,IAA1Bd,EAAUO,KAAKQ,QACnFpD,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,UAIZD,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQF,QAASK,GAAjB,oHC/DNtE,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCkF,YAAa,CACTC,SAAU,UAEdC,QAAS,CACLD,SAAU,OACVE,WAAY,OAEhBC,OAAQ,CACJC,UAAW,aAyJJnF,cACX,SAACC,GAAD,MAAoB,CAChBmF,WAAYnF,EAAME,YAAYkF,eAC9BhF,SAAUJ,EAAME,YAAYG,WAAW+E,iBAE3C,SAAA9E,GAAQ,MAAK,CACT+E,WAAY,kBAAM/E,EAAS,CAAEG,KAAM,iBACnC6E,cAAe,SAAClE,EAAqBiC,GAAtB,OAAoC,SAAC7C,GAAD,OAAkBF,EAAS,CAC1EG,KAAM,iBACND,QAAS,CACLY,MACAP,MAAOL,EAAQM,OAAOD,MACtBwD,MAAOhB,OAGfkC,cAAe,SAAC/E,GAAD,OAAqB,kBAAMF,EAAS,CAAEG,KAAM,iBAAkBD,cAC7EgF,WAAY,SAACnC,EAAWoC,GAAZ,OAA0B,SAACjF,GAAD,OAAkBF,EAAS,CAC7DG,KAAM,cACND,QAAS,CACLK,MAAOL,EAAQM,OAAOD,MACtB6E,QAASrC,EACTsC,KAAMF,OAGdG,QAAS,SAACvC,EAAWoC,EAAWI,GAAvB,OAAqC,SAACrF,GAAD,OAAkBF,EAAS,CACrEG,KAAM,WACND,QAAS,CACLK,MAAOL,EAAQM,OAAOD,MACtB6E,QAASrC,EACTyC,SAAUL,EACVM,EAAGF,OAGXG,SAAU,SAAC3C,EAAWwC,GAAZ,OAA0B,SAACrF,GAAD,OAAkBF,EAAS,CAC3DG,KAAM,YACND,QAAS,CACLK,MAAOL,EAAQM,OAAOD,MACtB6E,QAASrC,EACTyC,SAAUD,OAIlBI,aAAc,SAACzF,GAAD,OAAqB,kBAAMF,EAAS,CAAEG,KAAM,gBAAiBD,cAC3E0F,gBAAiB,SAAC7C,EAAWoC,GAAZ,OAA0B,kBAAMnF,EAAS,CAAEG,KAAM,mBAAoBD,QAAS,CAACkF,QAASrC,EAAG8C,UAAWV,OACvHW,gBAAiB,SAAC5F,GAAD,OAAqB,kBAAMF,EAAS,CAAEG,KAAM,mBAAoBD,cACjF6F,mBAAoB,SAAChD,EAAWoC,GAAZ,OAA0B,kBAAMnF,EAAS,CAAEG,KAAM,sBAAuBD,QAAS,CAACkF,QAASrC,EAAGiD,aAAcb,SA7CzH1F,CArIoB,SAAAkB,GAK7B,IAJFkE,EAIElE,EAJFkE,WAAY/E,EAIVa,EAJUb,SACAkF,GAGVrE,EAHFoE,WAGEpE,EAHUqE,eAA8BE,GAGxCvE,EAHyBsE,cAGzBtE,EAHwCuE,YAAYI,EAGpD3E,EAHoD2E,QAASI,EAG7D/E,EAH6D+E,SAC/DC,EAEEhF,EAFFgF,aAAcC,EAEZjF,EAFYiF,gBACdE,EACEnF,EADFmF,gBAAiBC,EACfpF,EADeoF,mBAEXnF,EAAUzB,IAChB,OACI+B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACVuD,EAAWhC,IAAI,SAACuC,EAASrC,GAAV,OACZ7B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,UAAU,eAAeR,IAAKiC,GACjC7B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIC,MAAO,2GAAwBuB,EAC/BtB,OAAQ3B,EAAS4B,OAAS5B,EAAS6B,SAAWyD,EAAQa,EACtDrE,SAAUoD,EAAc,IAAKjC,GAC7BxC,MAAO6E,EAAQa,KAEjBnG,EAAS4B,OAAS5B,EAAS6B,SAAWyD,EAAQa,GAC5C/E,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAgBJ,OAAO,GAAvB,2FAAgDsB,GAEpD7B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACIrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACItB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACIvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,MACC0C,EAAQC,KAAKxC,IAAI,SAAC4C,EAAGN,GAAJ,OACdjE,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAW5B,IAAKqE,GACZjE,EAAAC,EAAAC,cAAA,OAAKE,UAAWV,EAAQ2D,YAAc,QAClCrD,EAAAC,EAAAC,cAAA,gBAAQ+D,GACRjE,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CACIC,QAASwC,EAAgB7C,EAAGoC,GAC5Bd,SAAkC,IAAxBe,EAAQC,KAAKf,QACvBpD,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,aAOxBD,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACIzB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACIvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAWM,UAAU,KAAKC,MAAM,OAAhC,SAGCmC,EAAQC,KAAKxC,IAAI,SAAC4C,EAAGS,GAAJ,OACdhF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAW5B,IAAKoF,GACZhF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIK,SAAUsD,EAAWnC,EAAGmD,GACxB1E,MAAK,KAAA0B,OAAOH,EAAP,OAAAG,OAAcgD,GACnBzE,OAAQ3B,EAAS4B,OAAS5B,EAAS6B,SAAWyD,EAAQC,KAAKa,GAC3D3F,MAAOkF,KACT3F,EAAS4B,OAAS5B,EAAS6B,SAAWyD,EAAQC,KAAKa,IACjDhF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAgBJ,OAAO,GAAvB,2HAKf2D,EAAQK,EAAE5C,IAAI,SAACsD,EAAKZ,GAAN,OACXrE,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAU3B,IAAKyE,GACXrE,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAWM,UAAU,KAAKC,MAAM,MAAM3B,UAAU,OAC5CJ,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAYC,QAAS2C,EAAmBhD,EAAGwC,GAAIlB,SAA+B,IAArBe,EAAQK,EAAEnB,QAC/DpD,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,OAEJD,EAAAC,EAAAC,cAAA,gBACMmE,EADN,MACYA,IAAMH,EAAQK,EAAEnB,OAAS,EAAI,IAAM,KAAOiB,EAAI,KAG7DY,EAAItD,IAAI,SAAC4C,EAAGS,GAAJ,OACLhF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAW5B,IAAKoF,GACZhF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIpB,KAAK,SACLqB,MAAK,qDAAA0B,OAAegD,EAAf,0EAAAhD,OAAkCqC,EAAlC,OAAArC,OAAyCqC,IAAMH,EAAQK,EAAEnB,OAAS,EAAI,IAAM,KAAOiB,EAAI,IAC5F3D,SAAU0D,EAAQvC,EAAGwC,EAAGW,GACxB3F,MAAOkF,cAQ/BL,EAAQgB,GAAG9B,QACXpD,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACIrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACItB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACIvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,MACAxB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,wHAKRxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACKyC,EAAQgB,GAAGvD,IAAI,SAACwD,EAAGd,GAAJ,OACZrE,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAU3B,IAAKyE,GACXrE,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAWM,UAAU,KAAKC,MAAM,MAAM3B,UAAU,OAC5CJ,EAAAC,EAAAC,cAAA,YACK,KAAOmE,EAAI,KAGpBrE,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACIxB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIpB,KAAK,SACLmB,UAAWV,EAAQ6D,QACnB7C,SAAU8D,EAAS3C,EAAGwC,GACtBhF,MAAO8F,UAQnCnF,EAAAC,EAAAC,cAAA,OAAKE,UAAWV,EAAQ+D,OAAS,QAC7BzD,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQF,QAAS0C,EAAgB/C,IAAjC,kKAGA7B,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQF,QAASuC,EAAa5C,IAA9B,yKCnDTtD,cACX,SAACC,GAAD,MAAoB,CAChB6D,UAAW7D,EAAME,YAAY4D,aAC7BqB,WAAYnF,EAAME,YAAYkF,eAC9BwB,YAAa5G,EAAME,YAAY2G,eAC/BzG,SAAUJ,EAAME,YAAYG,WAAWwG,iBAE3C,SAAAvG,GAAQ,MAAK,CACTwG,WAAY,SAACC,EAAgBC,GAAjB,OAAoC,SAACxG,GAAD,OAAkBF,EAAS,CAAEG,KAAM,cAAeD,QAAS,CACvGuG,SACAC,SACAC,KAAMzG,EAAQM,OAAOD,WAEzBqG,WAAY,SAACH,EAAgBI,GAAjB,OAAoC,SAAC3G,GAAD,OAAkBF,EAAS,CAAEG,KAAM,cAAeD,QAAS,CACvGuG,SACAI,SACAC,KAAM5G,EAAQM,OAAOD,aAhBlBd,CAtFsB,SAAAkB,GAA4E,IAA1E4C,EAA0E5C,EAA1E4C,UAAWsB,EAA+DlE,EAA/DkE,WAAYyB,EAAmD3F,EAAnD2F,YAAaxG,EAAsCa,EAAtCb,SAAU0G,EAA4B7F,EAA5B6F,WAAYI,EAAgBjG,EAAhBiG,WAC7F,OACI1F,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,UAAU,gBACbJ,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACIrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACItB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACIvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,MACCa,EAAUO,KAAKjB,IAAI,SAAC4C,EAAG1C,GAAJ,OAChB7B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAW5B,IAAKiC,GAAhB,IACMA,OAKlB7B,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACKY,EAAUO,KAAKjB,IAAI,SAAC4C,EAAG1C,GAAJ,OAChB7B,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAU3B,IAAKiC,GACX7B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAWM,UAAU,KAAKC,MAAM,MAAM3B,UAAU,OAC5CJ,EAAAC,EAAAC,cAAA,gBACM2B,IAINuD,EAAYK,KAAK5D,GAAGF,IAAI,SAAC8D,EAAMpB,GAAP,OACpBrE,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAW5B,IAAKyE,EAAGjE,UAAU,UACzBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIK,SAAU4E,EAAWzD,EAAGwC,GACxB/D,MAAK,KAAA0B,OAAOH,EAAP,OAAAG,OAAcqC,GACnB9D,OAAQ3B,EAAS4B,OAAS5B,EAAS6B,SAAWgF,EAC9CpG,MAAOoG,KACT7G,EAAS4B,OAAS5B,EAAS6B,SAAWgF,GACpCzF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAgBJ,OAAO,GAAvB,2FAAAyB,OAAmDH,EAAnD,OAAAG,OAA0DqC,aAW9FrE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,UAAU,gBACbJ,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACIrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACItB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACIvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,MACCa,EAAUO,KAAKjB,IAAI,SAAC4C,EAAG1C,GAAJ,OAChB7B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAW5B,IAAKiC,GAAhB,IACMA,OAKlB7B,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACKkC,EAAWhC,IAAI,SAAC4C,EAAGF,GAAJ,OACZrE,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAU3B,IAAKyE,GACXrE,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAWM,UAAU,KAAKC,MAAM,MAAM3B,UAAU,OAC5CJ,EAAAC,EAAAC,cAAA,gBACMmE,IAINhC,EAAUO,KAAKjB,IAAI,SAAC4C,EAAG1C,GAAJ,OACf7B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAW5B,IAAKiC,EAAGzB,UAAU,UACzBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIK,SAAUgF,EAAW7D,EAAGwC,GACxB/D,MAAK,KAAA0B,OAAOH,EAAP,OAAAG,OAAcqC,GACnB9D,OAAQ3B,EAAS4B,OAAS5B,EAAS6B,SAAW2E,EAAYQ,KAAK/D,GAAGwC,GAClEhF,MAAO+F,EAAYQ,KAAK/D,GAAGwC,MAC7BzF,EAAS4B,OAAS5B,EAAS6B,SAAW2E,EAAYQ,KAAK/D,GAAGwC,IACxDrE,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAgBJ,OAAO,GAAvB,2FAAAyB,OAAmDH,EAAnD,OAAAG,OAA0DqC,gBCjF3FwB,EAJU,WACrB,OAAO,gBLsBC7H,sMAgDL,IAsDM8H,EAAuB,CAChCpH,YAAa,CACTC,eAAgB,CACZF,WAAY,GACZwC,GAAI,EACJC,EAAG,EACHQ,UAAW,GACXV,iBAAiB,GAGrBsB,aAAc,CACVM,KAAM,CAjEgC,CAC9CG,EAAG,GACHC,EAAG,GACHC,IAAK,EACLC,GAAI,EACJ6C,EAAG,KA6DKC,KAAM,GACNC,KAAM,IAGVrC,eAAgB,CAhDwB,CAC5CmB,EAAG,GACHR,EAAG,CAAC,CAAC,IACLW,GAAI,GACJf,KAAM,CAAC,MA6CHkB,eAAgB,CACZO,KAAM,CAAC,CAAC,KACRH,KAAM,CAAC,CAAC,MAEZS,WAAY,CACRC,KAAM,OACNlH,KAAM,QACNmH,KAAM,KACNC,MAAO,IAEXxH,WAAY,CACRF,eAAgB,CACZ8B,QAAQ,EACRD,OAAO,GAEX8B,aAAc,CACV7B,QAAQ,EACRD,OAAO,GAEXoD,eAAgB,CACZnD,QAAQ,EACRD,OAAO,GAEX6E,eAAgB,CACZ5E,QAAQ,EACRD,OAAO,GAEX0F,WAAY,CACRzF,QAAQ,EACRD,OAAO,KAInB8F,KAAM,KACNC,QAAS,MM7JPtI,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCqI,KAAM,CACJC,MAAO,OAETC,OAAQ,CACNrI,UAAWF,EAAMG,QAAQ,GACzBqI,YAAaxI,EAAMG,QAAQ,IAE7BsI,iBAAkB,CAChBC,aAAc1I,EAAMG,QAAQ,IAE9BwI,eAAgB,CACdC,QAAS5I,EAAMG,QAAQ,OA8B3B,IAuFeC,cACX,SAACC,GAAD,MAAoB,CAChBI,SAAUJ,EAAME,YAAYG,aAEhC,SAAAC,GAAQ,MAAK,CACTkI,eAAgB,SAAChI,GAAD,OAA8BF,EAAS,CAAEG,KAAM,kBAAmBD,aAClFiI,MAAO,kBAAMnI,EAAS,CAAEG,KAAM,aANvBV,CAvFoB,SAAAkB,GAAuC,IAArCb,EAAqCa,EAArCb,SAAUoI,EAA2BvH,EAA3BuH,eAAgBC,EAAWxH,EAAXwH,MACrDvH,EAAUzB,IADsDiJ,EAElCC,IAAMC,SAAS,GAFmBC,EAAAxH,OAAAyH,EAAA,EAAAzH,CAAAqH,EAAA,GAE/DK,EAF+DF,EAAA,GAEnDG,EAFmDH,EAAA,GAGhEI,EA5BD,CACD,CACInH,MAAO,wFACPoH,QAAS1H,EAAAC,EAAAC,cAACyH,EAAD,OAEb,CACIrH,MAAO,oLACPoH,QAAS1H,EAAAC,EAAAC,cAAC0H,EAAD,OAEb,CACItH,MAAO,sHACPoH,QAAS1H,EAAAC,EAAAC,cAAC2H,EAAD,OAEb,CACIvH,MAAO,qEACPoH,QAAS1H,EAAAC,EAAAC,cAAC4H,EAAD,OAEb,CACIxH,MAAO,gHACPoH,QAAS1H,EAAAC,EAAAC,cAAC6H,EAAD,QAYXC,EAAa,SAAC5B,GAAD,OAAkB,WACjC,GAAIA,IAASmB,EAAY,CACrB,IAAMU,EAAerJ,EAASZ,EAASuJ,IACvCP,EAAe,CACXpH,IAAK5B,EAASuJ,GACdlI,MAAMQ,OAAAC,EAAA,EAAAD,CAAA,GACCoI,EADF,CAEDxH,QAAQ,MAGhB+G,EAAcpB,MAYtB,OACEpG,EAAAC,EAAAC,cAAA,OAAKE,UAAWV,EAAQ8G,MACtBxG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+H,QAAM,EAACC,UAAW,EAAG/H,UAAWV,EAAQoH,gBAC3C9G,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KAAYnB,EAAAC,EAAAC,cAAA,mUACZF,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQF,QAPK,aAOkB9B,UAAWV,EAAQgH,OAAQvD,UAAU,GAApE,yDAGAnD,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQF,QATK,aASkB9B,UAAWV,EAAQgH,OAAQvD,UAAU,GAApE,yDAGAnD,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQF,QAlBI,WAChBsF,EAAc,GACdP,KAgBkC7G,UAAWV,EAAQgH,QAAjD,oDAGA1G,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQF,QAjBE,aAiBkB9B,UAAWV,EAAQgH,OAAQvD,UAAU,GAAjE,sGAIJnD,EAAAC,EAAAC,cAACkI,EAAA,EAAD,CAASC,WAAS,EAACd,WAAYA,EAAYe,YAAY,YACpDb,EAAM9F,IAAI,SAACyE,EAAMvD,GACd,IAAMoF,EAAerJ,EAASZ,EAAS6E,IACvC,OACF7C,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAM3I,IAAKwG,EAAK9F,OACZN,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAYtG,QAAS8F,EAAWnF,GAAQ4F,eAAa,GACjDzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAWnI,OAAQ0H,EAAazH,OAASyH,EAAaxH,QAAS2F,EAAK9F,QAExEN,EAAAC,EAAAC,cAACyI,EAAA,EAAD,KACKvC,EAAKsB,QACN1H,EAAAC,EAAAC,cAAA,OAAKE,UAAWV,EAAQkH,wBAuBnCW,IAAeE,EAAMrE,QAClBpD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+H,QAAM,EAACC,UAAW,EAAG/H,UAAWV,EAAQoH,gBAC3C9G,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KAAYnB,EAAAC,EAAAC,cAAA,wHCzIb0I,EAJW,WACtB,OAAO,MCiCIC,EA5BO,WACpB,OACE7I,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACE9I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,OAAK6I,IAAI,0BAA0BC,IAAI,MAEzChJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAASG,GAAG,IAAIC,OAAK,EAAC9I,UAAU,WAAW+I,gBAAgB,mBAA3D,oFAEFnJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAASG,GAAG,WAAW7I,UAAU,WAAW+I,gBAAgB,mBAA5D,gFAKNnJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CAAOF,OAAK,EAACG,KAAK,IAAIvH,UAAWwH,IAEjCtJ,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CAAOC,KAAK,UAAUvH,UAAW8G,QCfvBW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+DCfUC,iBCDDC,EAAA,CACXC,kBADW,SACOtL,EAAeuL,GAC7B,OAAOlK,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEPC,eAAekB,OAAAC,EAAA,EAAAD,CAAA,GACRkK,EADO,CAEV9I,GAAI8I,EAAO9I,IAAM,EACjBC,EAAG6I,EAAO7I,GAAK,IAEnBrC,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADf,CAENF,eAAekB,OAAAC,EAAA,EAAAD,CAAA,GACRrB,EAAME,YAAYG,WAAWF,eADtB,CAEV6B,QAAWuJ,EAAuBtL,YAC9BD,EAAME,YAAYC,eAAe+C,UAAUsI,MAAM,SAAApI,GAAQ,SAAOA,EAAShC,MAAOgC,EAASvC,kBAMjH4K,aAtBW,SAsBEzL,GACT,IAAMkD,EAAS,GAAAM,OAAAnC,OAAAqK,EAAA,EAAArK,CACRrB,EAAME,YAAYC,eAAe+C,WADzB,CAEX,CAAC9B,IAAK,GAAIP,MAAO,MAErB,OAAOQ,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEPC,eAAekB,OAAAC,EAAA,EAAAD,CAAA,GACRrB,EAAME,YAAYC,eADX,CAEV+C,UAAWA,IAEf7C,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADf,CAENF,eAAekB,OAAAC,EAAA,EAAAD,CAAA,GACRrB,EAAME,YAAYG,WAAWF,eADtB,CAEV6B,OAAO,WAM3B2J,gBA7CW,SA6CK3L,EAAeQ,GAK3B,IAAM0C,EAAS,GAAAM,OAAAnC,OAAAqK,EAAA,EAAArK,CACRrB,EAAME,YAAYC,eAAe+C,UAAU0I,MAAM,EAAGpL,EAAQG,gBADpD,CAAAU,OAAAC,EAAA,EAAAD,CAAA,GAEPrB,EAAME,YAAYC,eAAe+C,UAAU1C,EAAQG,eAF5CU,OAAAE,EAAA,EAAAF,CAAA,GAE6Db,EAAQI,KAAOJ,EAAQK,SAFpFQ,OAAAqK,EAAA,EAAArK,CAGRrB,EAAME,YAAYC,eAAe+C,UAAU0I,MAAMpL,EAAQG,cAAgB,KAEhF,OAAOU,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEPC,eAAekB,OAAAC,EAAA,EAAAD,CAAA,GACRrB,EAAME,YAAYC,eADX,CAEV+C,UAAWA,IAEf7C,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADf,CAENF,eAAekB,OAAAC,EAAA,EAAAD,CAAA,GACRrB,EAAME,YAAYG,WAAWF,eADtB,CAEV6B,MAAOhC,EAAME,YAAYC,eAAeF,YACpCD,EAAME,YAAYC,eAAe+C,UAAUsI,MAAM,SAAApI,GAAQ,SAAOA,EAAShC,MAAOgC,EAASvC,kBAMjHgL,gBA1EW,SA0EK7L,EAAeQ,GAC3B,IAAM0C,EAAYlD,EAAME,YAAYC,eAAe+C,UAAU4I,OAAO,SAAC/F,EAAG1C,GAAJ,OAAUA,IAAM7C,IACpF,OAAOa,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEPC,eAAekB,OAAAC,EAAA,EAAAD,CAAA,GACRrB,EAAME,YAAYC,eADX,CAEV+C,UAAWA,IAEf7C,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADf,CAENF,eAAekB,OAAAC,EAAA,EAAAD,CAAA,GACRrB,EAAME,YAAYG,WAAWF,eADtB,CAEV6B,MAAOhC,EAAME,YAAYC,eAAeF,YACpCD,EAAME,YAAYC,eAAe+C,UAAUsI,MAAM,SAAApI,GAAQ,SAAOA,EAAShC,MAAOgC,EAASvC,mBCzFtGkL,EAAA,CACXC,gBADW,SACKhM,EAAeuL,GAC3B,IAAMnH,EAAI,GAAAZ,OAAAnC,OAAAqK,EAAA,EAAArK,CACHrB,EAAME,YAAY4D,aAAaM,KAAKwH,MAAM,EAAGL,EAAOlH,QADjD,CAAAhD,OAAAC,EAAA,EAAAD,CAAA,GAGCkK,EAAOpH,IAHR,CAIF1B,GAAI8I,EAAOpH,IAAIM,KAAO,EACtB/B,EAAG6I,EAAOpH,IAAIO,IAAM,KALlBrD,OAAAqK,EAAA,EAAArK,CAOHrB,EAAME,YAAY4D,aAAaM,KAAKwH,MAAML,EAAOlH,MAAQ,KAEhE,OAAOhD,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEP4D,aAAc,CACVM,QAEJ/D,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADf,CAENyD,aAAazC,OAAAC,EAAA,EAAAD,CAAA,GACNrB,EAAME,YAAYG,WAAWF,eADxB,CAER6B,MAAOoC,EAAKoH,MAAM,SAAAzF,GAAC,SAAOA,EAAExB,IAAKwB,EAAEvB,cAMvDyH,aA5BW,SA4BEjM,GACT,IAAMkM,EAAO,GAAA1I,OAAAnC,OAAAqK,EAAA,EAAArK,CACNrB,EAAME,YAAY4D,aAAaM,MADzB,CZwC6B,CAC9CG,EAAG,GACHC,EAAG,GACHC,IAAK,EACLC,GAAI,EACJ6C,EAAG,MYzCO4E,EAAO,GAAA3I,OAAAnC,OAAAqK,EAAA,EAAArK,CACNrB,EAAME,YAAY2G,eAAeI,KAAK9D,IAAI,SAAAsD,GAAG,SAAAjD,OAAAnC,OAAAqK,EAAA,EAAArK,CAAQoF,GAAR,CAAa,QADpD,CAET2F,MAAMF,EAAQtH,QAAQyH,KAAK,MAEzBC,EAAO,GAAA9I,OAAAnC,OAAAqK,EAAA,EAAArK,CACNrB,EAAME,YAAY2G,eAAeO,MAD3B,CAETgF,MAAMpM,EAAME,YAAYkF,eAAeR,QAAQyH,KAAK,MAExD,OAAOhL,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEP4D,aAAc,CACVM,KAAM8H,GAEVrF,eAAgB,CACZI,KAAMkF,EACN/E,KAAMkF,GAEVjM,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADf,CAENyD,aAAazC,OAAAC,EAAA,EAAAD,CAAA,GACNrB,EAAME,YAAYG,WAAWF,eADxB,CAER6B,MAAOkK,EAAQV,MAAM,SAAAzF,GAAC,SAAOA,EAAExB,IAAKwB,EAAEvB,OAE1CqC,eAAexF,OAAAC,EAAA,EAAAD,CAAA,GACRrB,EAAME,YAAYG,WAAWF,eADtB,CAEV6B,OAAO,WAM3BuK,gBAlEW,SAkEKvM,EAAeuL,GAC3B,IAAMiB,EAAQ,GAAAhJ,OAAAnC,OAAAqK,EAAA,EAAArK,CACPrB,EAAME,YAAY4D,aAAaM,KAAKwH,MAAM,EAAGL,IADtClK,OAAAqK,EAAA,EAAArK,CAEPrB,EAAME,YAAY4D,aAAaM,KAAKwH,MAAML,EAAS,KAEpDY,EAAUnM,EAAME,YAAY2G,eAAeI,KAC5C6E,OAAO,SAACrF,EAAKpD,GAAN,OAAYA,IAAMkI,IACzBpI,IAAI,SAACsD,EAAKpD,GAAN,OAAYoD,EAAIqF,OAAO,SAAC7E,EAAM5D,GAAP,OAAaA,IAAMkI,MAE7Ce,EAAUtM,EAAME,YAAY2G,eAAeO,KAC5C0E,OAAO,SAACrF,EAAKpD,GAAN,OAAYA,IAAMkI,IAC9B,OAAOlK,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEP4D,aAAc,CACVM,KAAMoI,GAEV3F,eAAgB,CACZI,KAAMkF,EACN/E,KAAMkF,GAEVjM,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADf,CAENyD,aAAazC,OAAAC,EAAA,EAAAD,CAAA,GACNrB,EAAME,YAAYG,WAAWF,eADxB,CAER6B,MAAOwK,EAAShB,MAAM,SAAAzF,GAAC,SAAOA,EAAExB,IAAKwB,EAAEvB,OAE3CqC,eAAexF,OAAAC,EAAA,EAAAD,CAAA,GACRrB,EAAME,YAAYG,WAAWF,eADtB,CAEV6B,MAAOmK,EAAQX,MAAM,SAAA/E,GAAG,OAAIA,EAAI+E,MAAMT,YAAauB,EAAQd,MAAM,SAAA/E,GAAG,OAAIA,EAAI+E,MAAMT,qBChG3F0B,GAAA,CACXC,YADW,SACC1M,EAAeuL,GACvB,IAAMoB,EAAc,GAAAnJ,OAAAnC,OAAAqK,EAAA,EAAArK,CACbrB,EAAME,YAAYkF,gBADL,CbyFoB,CAC5CmB,EAAG,GACHR,EAAG,CAAC,CAAC,IACLW,GAAI,GACJf,KAAM,CAAC,OazFH,OAAOtE,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEPkF,eAAgBuH,EAChBtM,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADf,CAENyD,aAAazC,OAAAC,EAAA,EAAAD,CAAA,GACNrB,EAAME,YAAYG,WAAW+E,eADxB,CAERpD,MAAO2K,EAAenB,MAAM,SAAAoB,GAAC,SACzBA,EAAErG,IAAKqG,EAAEjH,KAAK6F,MAAMT,qBAO5C8B,eAvBW,SAuBI7M,EAAeuL,GAK1B,IAAMuB,EAAkB9M,EAAME,YAAYkF,eAAemG,EAAOlH,OAC1D0I,EAAkB,GAAAvJ,OAAAnC,OAAAqK,EAAA,EAAArK,CACjBrB,EAAME,YAAYkF,eAAewG,MAAM,EAAGL,EAAOlH,QADhC,CAAAhD,OAAAC,EAAA,EAAAD,CAAA,GAGbyL,EAHazL,OAAAE,EAAA,EAAAF,CAAA,GAIfkK,EAAOnK,IAAMmK,EAAO1K,SAJLQ,OAAAqK,EAAA,EAAArK,CAMjBrB,EAAME,YAAYkF,eAAewG,MAAML,EAAOlH,MAAQ,KAE7D,OAAOhD,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEPkF,eAAgB2H,EAChB1M,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADf,CAENyD,aAAazC,OAAAC,EAAA,EAAAD,CAAA,GACNrB,EAAME,YAAYG,WAAW+E,eADxB,CAERpD,MAAO+K,EAAmBvB,MAAM,SAAAoB,GAAC,SAC7BA,EAAErG,IAAKqG,EAAEjH,KAAK6F,MAAMT,qBAO5CiC,eAtDW,SAsDIhN,EAAeuL,GAC1B,IAAM0B,EAAsBjN,EAAME,YAAYkF,eAAe0G,OAAO,SAACc,EAAGvJ,GAAJ,OAAUA,IAAMkI,IACpF,OAAOlK,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEPkF,eAAgB6H,EAChB5M,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADf,CAENyD,aAAazC,OAAAC,EAAA,EAAAD,CAAA,GACNrB,EAAME,YAAYG,WAAW+E,eADxB,CAERpD,MAAOiL,EAAoBzB,MAAM,SAAAoB,GAAC,SAC9BA,EAAErG,IAAKqG,EAAEjH,KAAK6F,MAAMT,qBAO5CmC,YAzEW,SAyEClN,EAAeuL,GAKvB,IAAMuB,EAAkB9M,EAAME,YAAYkF,eAAemG,EAAO7F,SAC1DqH,EAAkB,GAAAvJ,OAAAnC,OAAAqK,EAAA,EAAArK,CACjBrB,EAAME,YAAYkF,eAAewG,MAAM,EAAGL,EAAO7F,UADhC,CAAArE,OAAAC,EAAA,EAAAD,CAAA,GAGbyL,EAHa,CAIhBnH,KAAI,GAAAnC,OAAAnC,OAAAqK,EAAA,EAAArK,CACGyL,EAAgBnH,KAAKiG,MAAM,EAAGL,EAAO5F,OADxC,CAEA4F,EAAO1K,OAFPQ,OAAAqK,EAAA,EAAArK,CAGGyL,EAAgBnH,KAAKiG,MAAML,EAAO5F,KAAO,QAPhCtE,OAAAqK,EAAA,EAAArK,CAUjBrB,EAAME,YAAYkF,eAAewG,MAAML,EAAO7F,QAAU,KAE/D,OAAOrE,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEPkF,eAAgB2H,EAChB1M,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADf,CAENyD,aAAazC,OAAAC,EAAA,EAAAD,CAAA,GACNrB,EAAME,YAAYG,WAAW+E,eADxB,CAERpD,MAAO+K,EAAmBvB,MAAM,SAAAoB,GAAC,SAC7BA,EAAErG,IAAKqG,EAAEjH,KAAK6F,MAAMT,qBAO5CoC,SA5GW,SA4GFnN,EAAeuL,GAMpB,IAAMuB,EAAkB9M,EAAME,YAAYkF,eAAemG,EAAO7F,SAC1DqH,EAAkB,GAAAvJ,OAAAnC,OAAAqK,EAAA,EAAArK,CACjBrB,EAAME,YAAYkF,eAAewG,MAAM,EAAGL,EAAO7F,UADhC,CAAArE,OAAAC,EAAA,EAAAD,CAAA,GAGbyL,EAHa,CAIhB/G,EAAC,GAAAvC,OAAAnC,OAAAqK,EAAA,EAAArK,CACMyL,EAAgB/G,EAAE6F,MAAM,EAAGL,EAAOzF,WADxC,IAAAtC,OAAAnC,OAAAqK,EAAA,EAAArK,CAGUyL,EAAgB/G,EAAEwF,EAAOzF,UAAU8F,MAAM,EAAGL,EAAOxF,IAH7D,CAIOwF,EAAO1K,OAAS,GAJvBQ,OAAAqK,EAAA,EAAArK,CAKUyL,EAAgB/G,EAAEwF,EAAOzF,UAAU8F,MAAML,EAAOxF,EAAI,MAL9D1E,OAAAqK,EAAA,EAAArK,CAOMyL,EAAgB/G,EAAE6F,MAAML,EAAOzF,SAAW,QAXjCzE,OAAAqK,EAAA,EAAArK,CAcjBrB,EAAME,YAAYkF,eAAewG,MAAML,EAAO7F,QAAU,KAE/D,OAAOrE,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEPkF,eAAgB2H,EAChB1M,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADf,CAENyD,aAAazC,OAAAC,EAAA,EAAAD,CAAA,GACNrB,EAAME,YAAYG,WAAW+E,eADxB,CAERpD,MAAO+K,EAAmBvB,MAAM,SAAAoB,GAAC,SAC7BA,EAAErG,IAAKqG,EAAEjH,KAAK6F,MAAMT,qBAO5CqC,UApJW,SAoJDpN,EAAeuL,GAKrB,IAAMuB,EAAkB9M,EAAME,YAAYkF,eAAemG,EAAO7F,SAC1DqH,EAAkB,GAAAvJ,OAAAnC,OAAAqK,EAAA,EAAArK,CACjBrB,EAAME,YAAYkF,eAAewG,MAAM,EAAGL,EAAO7F,UADhC,CAAArE,OAAAC,EAAA,EAAAD,CAAA,GAGbyL,EAHa,CAIhBpG,GAAE,GAAAlD,OAAAnC,OAAAqK,EAAA,EAAArK,CACKyL,EAAgBpG,GAAGkF,MAAM,EAAGL,EAAOzF,WADxC,CAEEyF,EAAO1K,OAAS,GAFlBQ,OAAAqK,EAAA,EAAArK,CAGKyL,EAAgBpG,GAAGkF,MAAML,EAAOzF,SAAW,QAPlCzE,OAAAqK,EAAA,EAAArK,CAUjBrB,EAAME,YAAYkF,eAAewG,MAAML,EAAO7F,QAAU,KAE/D,OAAOrE,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEPkF,eAAgB2H,EAChB1M,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADf,CAENyD,aAAazC,OAAAC,EAAA,EAAAD,CAAA,GACNrB,EAAME,YAAYG,WAAW+E,eADxB,CAERpD,MAAO+K,EAAmBvB,MAAM,SAAAoB,GAAC,SAC7BA,EAAErG,IAAKqG,EAAEjH,KAAK6F,MAAMT,qBAO5CsC,cAvLW,SAuLGrN,EAAeuL,GACzB,IAAM+B,EAA0BtN,EAAME,YAAYkF,eAAemG,GAC3DgC,EAAe,GAAA/J,OAAAnC,OAAAqK,EAAA,EAAArK,CACdrB,EAAME,YAAYkF,eAAewG,MAAM,EAAGL,IAD5B,CAAAlK,OAAAC,EAAA,EAAAD,CAAA,GAGViM,EAHU,CAIbvH,EAAGuH,EAAwBvH,EAAE5C,IAAI,SAAA2C,GAAQ,SAAAtC,OAAAnC,OAAAqK,EAAA,EAAArK,CAAQyE,GAAR,CAAkB,MAC3DH,KAAI,GAAAnC,OAAAnC,OAAAqK,EAAA,EAAArK,CAAMiM,EAAwB3H,MAA9B,CAAoC,QAL3BtE,OAAAqK,EAAA,EAAArK,CAOdrB,EAAME,YAAYkF,eAAewG,MAAML,EAAS,KAEvD,OAAOlK,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEPkF,eAAgBmI,EAChBlN,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADf,CAENyD,aAAazC,OAAAC,EAAA,EAAAD,CAAA,GACNrB,EAAME,YAAYG,WAAW+E,eADxB,CAERpD,MAAOuL,EAAgB/B,MAAM,SAAAoB,GAAC,SAC1BA,EAAErG,IAAKqG,EAAEjH,KAAK6F,MAAMT,qBAO5CyC,iBAnNW,SAmNMxN,EAAeuL,GAC5B,IAAMkC,EAAgCzN,EAAME,YAAYkF,eAAemG,EAAO7F,SACxEgI,EAAoB,GAAAlK,OAAAnC,OAAAqK,EAAA,EAAArK,CACnBrB,EAAME,YAAYkF,eAAewG,MAAM,EAAGL,EAAO7F,UAD9B,CAAArE,OAAAC,EAAA,EAAAD,CAAA,GAGfoM,EAHe,CAIlB1H,EAAG0H,EAA8B1H,EAAE5C,IAAI,SAAA2C,GAAQ,OAAIA,EAASgG,OAAO,SAAC/F,EAAG1C,GAAJ,OAAUA,IAAMkI,EAAOpF,cAC1FR,KAAM8H,EAA8B9H,KAAKmG,OAAO,SAAC/F,EAAG1C,GAAJ,OAAUA,IAAMkI,EAAOpF,eALrD9E,OAAAqK,EAAA,EAAArK,CAOnBrB,EAAME,YAAYkF,eAAewG,MAAML,EAAO7F,QAAU,KAE/D,OAAOrE,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEPkF,eAAgBsI,EAChBrN,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADf,CAENyD,aAAazC,OAAAC,EAAA,EAAAD,CAAA,GACNrB,EAAME,YAAYG,WAAW+E,eADxB,CAERpD,MAAO0L,EAAqBlC,MAAM,SAAAoB,GAAC,SAC/BA,EAAErG,IAAKqG,EAAEjH,KAAK6F,MAAMT,qBAO5C4C,iBA/OW,SA+OM3N,EAAeuL,GAC5B,IAAMqC,EAA4B5N,EAAME,YAAYkF,eAAemG,GAC7DsC,EAAmB,GAAArK,OAAAnC,OAAAqK,EAAA,EAAArK,CAClBrB,EAAME,YAAYkF,eAAewG,MAAM,EAAGL,IADxB,CAAAlK,OAAAC,EAAA,EAAAD,CAAA,GAGduM,EAHc,CAIjB7H,EAAC,GAAAvC,OAAAnC,OAAAqK,EAAA,EAAArK,CAAMuM,EAA0B7H,GAAhC,CAAmCqG,MAAMwB,EAA0BjI,KAAKf,QAAQyH,KAAK,KACtF3F,GAAE,GAAAlD,OAAAnC,OAAAqK,EAAA,EAAArK,CAAMuM,EAA0BlH,IAAhC,CAAoC,OALrBrF,OAAAqK,EAAA,EAAArK,CAOlBrB,EAAME,YAAYkF,eAAewG,MAAML,EAAS,KAEvD,OAAOlK,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEPkF,eAAgByI,EAChBxN,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADf,CAENyD,aAAazC,OAAAC,EAAA,EAAAD,CAAA,GACNrB,EAAME,YAAYG,WAAW+E,eADxB,CAERpD,MAAO6L,EAAoBrC,MAAM,SAAAoB,GAAC,SAC9BA,EAAErG,IAAKqG,EAAEjH,KAAK6F,MAAMT,qBAO5C+C,oBA3QW,SA2QS9N,EAAeuL,GAC/B,IAAMwC,EAAmC/N,EAAME,YAAYkF,eAAemG,EAAO7F,SAC3EsI,EAAuB,GAAAxK,OAAAnC,OAAAqK,EAAA,EAAArK,CACtBrB,EAAME,YAAYkF,eAAewG,MAAM,EAAGL,EAAO7F,UAD3B,CAAArE,OAAAC,EAAA,EAAAD,CAAA,GAGlB0M,EAHkB,CAIrBhI,EAAGgI,EAAiChI,EAAE+F,OAAO,SAAChG,EAAUzC,GAAX,OAAiBA,IAAMkI,EAAOjF,eAC3EI,GAAIqH,EAAiCrH,GAAGkF,MAAM,EAAGmC,EAAiCrH,GAAG9B,OAAS,MALzEvD,OAAAqK,EAAA,EAAArK,CAOtBrB,EAAME,YAAYkF,eAAewG,MAAML,EAAO7F,QAAU,KAE/D,OAAOrE,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEPkF,eAAgB4I,EAChB3N,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADf,CAENyD,aAAazC,OAAAC,EAAA,EAAAD,CAAA,GACNrB,EAAME,YAAYG,WAAW+E,eADxB,CAERpD,MAAOgM,EAAwBxC,MAAM,SAAAoB,GAAC,SAClCA,EAAErG,IAAKqG,EAAEjH,KAAK6F,MAAMT,sBChSjCkD,GAAA,CACXC,YADW,SACClO,EAAeuL,GAKvB,IAAM3E,EAAW,GAAApD,OAAAnC,OAAAqK,EAAA,EAAArK,CACVrB,EAAME,YAAY2G,eAAeI,KAAK2E,MAAM,EAAGL,EAAOxE,SAD5C,IAAAvD,OAAAnC,OAAAqK,EAAA,EAAArK,CAGNrB,EAAME,YAAY2G,eAAeI,KAAKsE,EAAOxE,QAAQ6E,MAAM,EAAGL,EAAOvE,SAH/D,CAITuE,EAAOtE,MAJE5F,OAAAqK,EAAA,EAAArK,CAKNrB,EAAME,YAAY2G,eAAeI,KAAKsE,EAAOxE,QAAQ6E,MAAML,EAAOvE,OAAS,MALrE3F,OAAAqK,EAAA,EAAArK,CAOVrB,EAAME,YAAY2G,eAAeI,KAAK2E,MAAML,EAAOxE,OAAS,KAEnE,OAAO1F,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEP2G,eAAexF,OAAAC,EAAA,EAAAD,CAAA,GACRrB,EAAME,YAAY2G,eADX,CAEVI,KAAML,IAEVvG,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADf,CAENwG,eAAexF,OAAAC,EAAA,EAAAD,CAAA,GACRrB,EAAME,YAAYG,WAAWwG,eADtB,CAEV7E,MAAO4E,EAAY4E,MAAM,SAAA/E,GAAG,OAAIA,EAAI+E,MAAMT,YACtC/K,EAAME,YAAY2G,eAAeO,KAAKoE,MAAM,SAAA/E,GAAG,OAAIA,EAAI+E,MAAMT,oBAMrFoD,YAlCW,SAkCCnO,EAAeuL,GAKvB,IAAM3E,EAAW,GAAApD,OAAAnC,OAAAqK,EAAA,EAAArK,CACVrB,EAAME,YAAY2G,eAAeO,KAAKwE,MAAM,EAAGL,EAAOxE,SAD5C,IAAAvD,OAAAnC,OAAAqK,EAAA,EAAArK,CAGNrB,EAAME,YAAY2G,eAAeO,KAAKmE,EAAOxE,QAAQ6E,MAAM,EAAGL,EAAOpE,SAH/D,CAIToE,EAAOnE,MAJE/F,OAAAqK,EAAA,EAAArK,CAKNrB,EAAME,YAAY2G,eAAeO,KAAKmE,EAAOxE,QAAQ6E,MAAML,EAAOpE,OAAS,MALrE9F,OAAAqK,EAAA,EAAArK,CAOVrB,EAAME,YAAY2G,eAAeO,KAAKwE,MAAML,EAAOxE,OAAS,KAEnE,OAAO1F,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEP2G,eAAexF,OAAAC,EAAA,EAAAD,CAAA,GACRrB,EAAME,YAAY2G,eADX,CAEVO,KAAMR,IAEVvG,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADf,CAENwG,eAAexF,OAAAC,EAAA,EAAAD,CAAA,GACRrB,EAAME,YAAYG,WAAWF,eADtB,CAEV6B,MAAO4E,EAAY4E,MAAM,SAAA/E,GAAG,OAAIA,EAAI+E,MAAMT,YACtC/K,EAAME,YAAY2G,eAAeI,KAAKuE,MAAM,SAAA/E,GAAG,OAAIA,EAAI+E,MAAMT,qBCxD1EqD,ILJChD,EKIa/J,OAAAC,EAAA,EAAAD,CAAA,GACtBgN,EACAC,EACAC,GACAC,GACA,CACCC,gBADD,SACiBzO,EAAeuL,GAC3B,OAAOlK,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAYmB,OAAAC,EAAA,EAAAD,CAAA,GACLrB,EAAME,YADF,CAEPG,WAAWgB,OAAAC,EAAA,EAAAD,CAAA,GACJrB,EAAME,YAAYG,WADfgB,OAAAE,EAAA,EAAAF,CAAA,GAELkK,EAAOnK,IAAMmK,EAAO1K,aAKrC6N,MAbD,SAaO1O,GACF,OAAOqB,OAAAC,EAAA,EAAAD,CAAA,GACArB,EADP,CAEIE,YAAaoH,EAAapH,iBLzBS,WAAkC,IAAjCF,EAAiC2O,UAAA/J,OAAA,QAAAgK,IAAAD,UAAA,GAAAA,UAAA,GAAzBrH,EAAciE,EAAWoD,UAAA/J,OAAA,EAAA+J,UAAA,QAAAC,EACjF,IACI,OAAOxD,EAASG,EAAO9K,MAAMT,EAAOuL,EAAO/K,SAC7C,MAAAqO,GACE,OAAO7O,KMEA8O,eAAYC,ICD3BC,IAASC,OACLzN,EAAAC,EAAAC,cAACwN,EAAA,EAAD,CAAUC,MAAOA,IACb3N,EAAAC,EAAAC,cAAC0N,EAAD,OAENC,SAASC,eAAe,SR6HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.947b8fc7.chunk.js","sourcesContent":["export interface IState {\n    editingTask: ITaskForm;\n    task: any;\n    history: any;\n}\n\nexport interface ITaskForm extends ITask {\n    validation: IValidation;\n}\n\nexport type IValidation = Record<keyof ITask, {\n    passed: boolean;\n    valid: boolean;\n}>;\n\nexport interface ITask {\n    functionalStep: IFunctional;\n    variableStep: IVariableStep;\n    managementStep: IManager[];\n    derivativeStep: IDerivative;\n    methodStep: IMethod;\n}\n\nexport enum TaskStep {\n    functionalStep,\n    variableStep,\n    managementStep,\n    derivativeStep,\n    methodStep,\n}\n\nexport interface IFunctional {\n    functional: string;\n    t0: number;\n    T: number;\n    constants: {key: string, value: number}[],\n    hasIntegralPart: boolean;\n}\n\nexport interface IVariableStep {\n    /** инфа о фазовых переменых и все что с ней связанно */\n    vars: IVariable[];\n    /** производная интегральной части по управлению.\n     *  внешний массив это одна из интегральных частей конкретной f,\n     *  внутренний массив это конкретное управление для этой f.\n     *  Нужно только если мы решаем задачу ИДУ (задачу с интегро дифференциальной связью)!!!\n     */\n    dgdu?: string[][];\n    /** производная интегральной части по фазовой переменной.\n     *  внешний массив это одна из интегральных частей конкретной f,\n     *  внутренний массив это конкретная фазовая переменная для этой f.\n     *  Нужно только если мы решаем задачу ИДУ (задачу с интегро дифференциальной связью)!!!\n     */\n    dgdx?: string[][];\n}\n\nexport interface IVariable {\n    /** производная фазовой переменной по времени */\n    f: string;\n    /** сопряженная переменная */\n    p: string;\n    /** начальное значение фазовой переменной */\n    xt0: number;\n    /** конечное значение сопраженной */\n    pT: number;\n    /** опциональная интегральная часть функции f.\n     *  Нужно только если мы решаем задачу ИДУ (задачу с интегро дифференциальной связью)!!!\n     */\n    g?: string;\n}\n\nexport const getEmptyVariable = (): IVariable => ({\n    f: '',\n    p: '',\n    xt0: 0,\n    pT: 1,\n    g: '',\n});\n\nexport interface IManager {\n    /** функция управления */\n    u: string;\n    /** массив значений параметров управления.\n     *  внешний массив это конкретный интервал времени,\n     *  а внутренний это значения параметров на этом интервале\n     */\n    v: number[][];\n    /** время точек переключения */\n    tk: number[];\n    /** производная управления по одному из ее параметров */\n    dudv: string[];\n}\n\nexport const getEmptyManager = (): IManager => ({\n    u: '',\n    v: [[0]],\n    tk: [],\n    dudv: ['']\n});\n\nexport interface IDerivative {\n    /** производная f по фазовой переменной.\n     *  внешний массив - это функции f,\n     *  внутренний это производная конкретной фазовой переменной x по этой f\n     */\n    dfdx: string[][];\n    /** производная f по управлению.\n     *  внешний массив - это функции f,\n     *  внутренний это производная конкретного управления u по этой f\n     *  (в первой версии приложения будет только одно управление!!)\n     */\n    dfdu: string[][];\n}\n\nexport interface IMethod {\n    /** название метода */\n    name: 'Newton' | 'Grad';\n    /** численная или аналитическая реализация этого метода */\n    type: 'digit' | 'anal';\n    /** шаг интегрирования */\n    step: number;\n    /** частота дискретизация для кеширования результатов */\n    descr: number;\n}\n\nexport const initialState: IState = {\n    editingTask: {\n        functionalStep: {\n            functional: '',\n            t0: 0,\n            T: 1,\n            constants: [],\n            hasIntegralPart: false\n\n        },\n        variableStep: {\n            vars: [getEmptyVariable()],\n            dgdu: [],\n            dgdx: []\n\n        },\n        managementStep: [getEmptyManager()],\n        derivativeStep: {\n            dfdu: [['']],\n            dfdx: [['']]\n        },\n        methodStep: {\n            name: 'Grad',\n            type: 'digit',\n            step: 1e-6,\n            descr: 40\n        },\n        validation: {\n            functionalStep: {\n                passed: false,\n                valid: false\n            },\n            variableStep: {\n                passed: false,\n                valid: false\n            },\n            managementStep: {\n                passed: false,\n                valid: false\n            },\n            derivativeStep: {\n                passed: false,\n                valid: false\n            },\n            methodStep: {\n                passed: false,\n                valid: false\n            },\n        }\n    },\n    task: null,\n    history: null,\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n    TextField, FormControl, FormControlLabel, Checkbox, FormHelperText, Paper,\n    Typography, makeStyles, Table, TableHead, TableRow, TableCell, TableBody, Button,\n    IconButton\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { IState, IFunctional, IValidation } from '../../../store/state';\n\nconst useStyles = makeStyles(theme => ({\n    block: {\n      marginTop: theme.spacing(4),\n    },\n  }));\n\n\ntype FunctionalComponent = React.FC<{\n    functional: IFunctional;\n    validity: IValidation['functionalStep'];\n    updateFunctional: (payload: IFunctional) => void;\n    updateConstant: (constantIndex: number, prop: 'key' | 'value') => (payload: any) => void;\n    addConstant: () => void;\n    removeConstant: (payload: number) => () => void;\n}>;\nconst Functional: FunctionalComponent = ({functional, validity, updateFunctional, updateConstant, addConstant, removeConstant}) => {\n        const classes = useStyles();\n        const handleChange = (key: keyof IFunctional) => (payload: any) => {\n            updateFunctional({\n                ...functional,\n                [key]: payload.target.value\n            });\n        };\n\n        return (\n            <Paper className=\"column Paper\">\n                <TextField\n                    label=\"Целевая функция\"\n                    error={!validity.valid && validity.passed && !functional.functional}\n                    onChange={handleChange('functional')}\n                    value={functional.functional}\n                />\n                {!validity.valid && validity.passed && !functional.functional && (\n                    <FormHelperText error={true}>Целевая функция должна быть указана</FormHelperText>\n                )}\n                <FormControl>\n                    <FormControlLabel\n                        control={\n                        <Checkbox value={functional.hasIntegralPart} onChange={handleChange('hasIntegralPart')}/>\n                        }\n                        label=\"Есть интегральная часть\"\n                    />\n                </FormControl>\n                <div className={classes.block + ' row'}>\n                    <TextField\n                        label=\"Начальный момент времени\"\n                        onChange={handleChange('t0')}\n                        type=\"number\"\n                        value={functional.t0}\n                    />\n                    <TextField\n                        label=\"Конечный момент времени\"\n                        onChange={handleChange('T')}\n                        type=\"number\"\n                        value={functional.T}\n                    />\n                </div>\n                <Typography variant=\"h6\" className={classes.block}>\n                    Константы\n                </Typography>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Имя</TableCell>\n                            <TableCell>Значение</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {functional.constants.map((constant, i) => (\n                            <TableRow key={i}>\n                                <TableCell component=\"th\" scope=\"row\" className=\"row\">\n                                    <TextField\n                                        onChange={updateConstant(i, 'key')}\n                                        label={`Имя константы${i}`}\n                                        error={!validity.valid && validity.passed && !constant.key}\n                                        value={constant.key}/>\n                                    {!validity.valid && validity.passed && !constant.key && (\n                                        <FormHelperText error={true}>{`Укажите имя константы`}</FormHelperText>\n                                    )}\n                                </TableCell>\n                                <TableCell className=\"column\">\n                                    <TextField\n                                        onChange={updateConstant(i, 'value')}\n                                        label={`Значение константы${i}`}\n                                        error={!validity.valid && validity.passed && !constant.value}\n                                        type=\"number\"\n                                        value={constant.value}/>\n                                    {!validity.valid && validity.passed && !constant.value && (\n                                        <FormHelperText error={true}>{`Укажите значение константы`}</FormHelperText>\n                                    )}\n                                </TableCell>\n                                <TableCell className=\"column\">\n                                    <IconButton onClick={removeConstant(i)}>\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <Button onClick={addConstant}>\n                    Добавить константу\n                </Button>\n            </Paper>\n        );\n    }\n\n\n\nexport default connect(\n    (state: IState) => ({\n        functional: state.editingTask.functionalStep,\n        validity: state.editingTask.validation.functionalStep\n    }),\n    dispatch => ({\n        updateFunctional: (payload: IFunctional) => dispatch({ type: 'FUNCTIONAL_UPDATE', payload }),\n        updateConstant: (constantIndex: number, prop: 'key' | 'value') => (payload: any) => dispatch({ type: 'CONSTANT_UPDATE', payload: {\n            constantIndex,\n            prop,\n            value: payload.target.value\n        } }),\n        addConstant: () => dispatch({ type: 'CONSTANT_ADD' }),\n        removeConstant: (payload: number) => () => dispatch({ type: 'CONSTANT_REMOVE', payload })\n    })\n)(Functional);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Paper, TextField, FormHelperText, Button, IconButton, makeStyles } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { IState, IValidation, IVariable, IVariableStep } from '../../../store/state';\n\nconst useStyles = makeStyles(theme => ({\n    block: {\n      marginTop: theme.spacing(4),\n    },\n}));\n\ntype VariablesComponent = React.FC<{\n    variables: IVariableStep;\n    validity: IValidation['variableStep'];\n    addVariable: () => void;\n    updateVariable: (payload: {var: IVariable; index: number}) => void;\n    removeVariable: (payload: number) => () => void;\n}>;\nconst Variables: VariablesComponent = ({variables, validity, addVariable, updateVariable, removeVariable}) => {\n    const classes = useStyles();\n    const handleVarChange = (key: keyof IVariable, i: number) => (payload: any) => updateVariable({\n        var: {\n            ...variables.vars[i],\n            [key]: payload.target.value\n        },\n        index: i\n    });\n    return (\n        <div className=\"column\">\n            {variables.vars.map((variable, i) => (\n                <Paper className=\"column Paper\" key={i}>\n                    <TextField\n                        label={'Функция фазовой переменной ' + i}\n                        error={!validity.valid && validity.passed && !variable.f}\n                        onChange={handleVarChange('f', i)}\n                        value={variable.f}\n                    />\n                    {!validity.valid && validity.passed && !variable.f && (\n                        <FormHelperText error={true}>{'Укажите функцию dx' + i + '/dt'}</FormHelperText>\n                    )}\n                    <TextField\n                        label={'Функция сопряженной переменной ' + i}\n                        error={!validity.valid && validity.passed && !variable.p}\n                        onChange={handleVarChange('p', i)}\n                        value={variable.p}\n                    />\n                    {!validity.valid && validity.passed && !variable.p && (\n                        <FormHelperText error={true}>{'Укажите функцию p' + i}</FormHelperText>\n                    )}\n                    <div className={classes.block + ' row'}>\n                        <TextField\n                            label={'Начальной значение фазовой переменной ' + i}\n                            onChange={handleVarChange('xt0', i)}\n                            type=\"number\"\n                            value={variable.xt0}\n                        />\n                        <TextField\n                            label={'Конечное значение сопряженной переменной ' + i}\n                            onChange={handleVarChange('pT', i)}\n                            type=\"number\"\n                            value={variable.pT}\n                        />\n                    </div>\n                    <IconButton className=\"close-btn\" onClick={removeVariable(i)} disabled={variables.vars.length === 1}>\n                        <DeleteIcon />\n                    </IconButton>\n                </Paper>\n            ))}\n            <Button onClick={addVariable}>\n                Добавить переменную\n            </Button>\n        </div>\n\n    );\n}\n\nexport default connect(\n    (state: IState) => ({\n        variables: state.editingTask.variableStep,\n        validity: state.editingTask.validation.variableStep\n    }),\n    dispatch => ({\n        addVariable: () => dispatch({ type: 'VARIABLE_ADD' }),\n        updateVariable: (payload: {var: IVariable; index: number}) => dispatch({ type: 'VARIABLE_UPDATE', payload }),\n        removeVariable: (payload: number) => () => dispatch({ type: 'VARIABLE_REMOVE', payload }),\n    })\n)(Variables);","import { IManager, IState, IValidation } from '../../../store/state';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Paper, IconButton, Table, TableHead, TableRow, TableCell, TableBody, TextField, FormHelperText, makeStyles } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n    tableHeader: {\n        maxWidth: '200px;'\n    },\n    tkField: {\n        maxWidth: '80px',\n        marginLeft: '8px'\n    },\n    center: {\n        alignSelf: 'center'\n    }\n  }));\n\ntype ManagementType = React.FC<{\n    management: IManager[];\n    validity: IValidation['managementStep'];\n\n    addManager: () => void;\n    updateManager: (key: keyof IManager, i: number) => (payload: any) => void;\n    removeManager: (payload: number) => () => void;\n    updateDudv: (i: number, j: number) => (payload: any) => void;\n    updateV: (i: number, j: number, k: number) => (payload: any) => void;\n    updateTk: (i: number, k: number) => (payload: any) => void;\n\n    addParameter: (i: number) => () => void;\n    removeParameter: (i: number, j: number) => () => void;\n    addTimeSwitcher: (payload: number) => () => void;\n    removeTimeSwitcher: (i: number, j: number) => () => void;\n}>;\nconst Management: ManagementType = ({\n    management, validity,\n    addManager, updateManager, removeManager, updateDudv, updateV, updateTk,\n    addParameter, removeParameter,\n    addTimeSwitcher, removeTimeSwitcher\n}) => {\n    const classes = useStyles();\n    return (\n        <div className=\"column\">\n            {management.map((manager, i) => (\n                <Paper className=\"column Paper\" key={i}>\n                    <TextField\n                        label={'Функция управления ' + i}\n                        error={!validity.valid && validity.passed && !manager.u}\n                        onChange={updateManager('u', i)}\n                        value={manager.u}\n                    />\n                    {!validity.valid && validity.passed && !manager.u && (\n                        <FormHelperText error={true}>Укажите функцию u {i}</FormHelperText>\n                    )}\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell></TableCell>\n                                {manager.dudv.map((v, j) => (\n                                    <TableCell key={j}>\n                                        <div className={classes.tableHeader + ' row'}>\n                                            <span>V{j}</span>\n                                            <IconButton\n                                                onClick={removeParameter(i, j)}\n                                                disabled={manager.dudv.length === 1}>\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        </div>\n                                    </TableCell>\n                                )) }\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    du/dv\n                                </TableCell>\n                                {manager.dudv.map((v, s) => (\n                                    <TableCell key={s}>\n                                        <TextField\n                                            onChange={updateDudv(i, s)}\n                                            label={`du${i}/dv${s}`}\n                                            error={!validity.valid && validity.passed && !manager.dudv[s]}\n                                            value={v}/>\n                                        {!validity.valid && validity.passed && !manager.dudv[s] && (\n                                            <FormHelperText error={true}>Укажите производную du/dv</FormHelperText>\n                                        )}\n                                    </TableCell>\n                                )) }\n                            </TableRow>\n                            {manager.v.map((row, k) => (\n                                <TableRow key={k}>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"row\">\n                                        <IconButton onClick={removeTimeSwitcher(i, k)} disabled={manager.v.length === 1}>\n                                            <DeleteIcon />\n                                        </IconButton>\n                                        <span>\n                                            t{k} - {k === manager.v.length - 1 ? 'T' : 't' + (k + 1)}\n                                        </span>\n                                    </TableCell>\n                                    {row.map((v, s) => (\n                                        <TableCell key={s}>\n                                            <TextField\n                                                type=\"number\"\n                                                label={`Значение v${s} на интервале t${k} - ${k === manager.v.length - 1 ? 'T' : 't' + (k + 1)}`}\n                                                onChange={updateV(i, k, s)}\n                                                value={v}/>\n                                        </TableCell>\n                                    )) }\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n\n                    {!!(manager.tk.length) && (\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell></TableCell>\n                                    <TableCell>\n                                        Момент переключения\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {manager.tk.map((t, k) => (\n                                    <TableRow key={k}>\n                                        <TableCell component=\"th\" scope=\"row\" className=\"row\">\n                                            <span>\n                                                {'t' + (k + 1)}\n                                            </span>\n                                        </TableCell>\n                                        <TableCell>\n                                            <TextField\n                                                type=\"number\"\n                                                className={classes.tkField}\n                                                onChange={updateTk(i, k)}\n                                                value={t}/>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    )}\n\n                    <div className={classes.center + ' row'}>\n                        <Button onClick={addTimeSwitcher(i)}>\n                            Добавить момент переключения\n                        </Button>\n                        <Button onClick={addParameter(i)}>\n                            Добавить параметр управления\n                        </Button>\n                    </div>\n\n\n                    {/* <IconButton className=\"close-btn\" onClick={removeManager(i)} disabled={management.length === 1}>\n                        <DeleteIcon />\n                    </IconButton> */}\n                </Paper>\n            ))}\n            {/* <Button onClick={addManager}>\n                Добавить управление\n            </Button> */}\n        </div>\n    );\n}\n\nexport default connect(\n    (state: IState) => ({\n        management: state.editingTask.managementStep,\n        validity: state.editingTask.validation.managementStep\n    }),\n    dispatch => ({\n        addManager: () => dispatch({ type: 'MANAGER_ADD' }),\n        updateManager: (key: keyof IManager, i: number) => (payload: any) => dispatch({\n            type: 'MANAGER_UPDATE',\n            payload: {\n                key,\n                value: payload.target.value,\n                index: i\n            }\n        }),\n        removeManager: (payload: number) => () => dispatch({ type: 'MANAGER_REMOVE', payload }),\n        updateDudv: (i: number, j: number) => (payload: any) => dispatch({\n            type: 'DUDV_UPDATE',\n            payload: {\n                value: payload.target.value,\n                manager: i,\n                dudv: j\n            }\n        }),\n        updateV: (i: number, j: number, k: number) => (payload: any) => dispatch({\n            type: 'V_UPDATE',\n            payload: {\n                value: payload.target.value,\n                manager: i,\n                interval: j,\n                v: k\n            }\n        }),\n        updateTk: (i: number, k: number) => (payload: any) => dispatch({\n            type: 'TK_UPDATE',\n            payload: {\n                value: payload.target.value,\n                manager: i,\n                interval: k,\n            }\n        }),\n\n        addParameter: (payload: number) => () => dispatch({ type: 'PARAMETER_ADD', payload }),\n        removeParameter: (i: number, j: number) => () => dispatch({ type: 'PARAMETER_REMOVE', payload: {manager: i, parameter: j} }),\n        addTimeSwitcher: (payload: number) => () => dispatch({ type: 'TIMESWITCHER_ADD', payload }),\n        removeTimeSwitcher: (i: number, j: number) => () => dispatch({ type: 'TIMESWITCHER_REMOVE', payload: {manager: i, timeswitcher: j} }),\n    })\n)(Management);","import { IManager, IState, IValidation, IVariableStep, IDerivative } from '../../../store/state';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TextField, FormHelperText, makeStyles } from '@material-ui/core';\n\ntype DerivativesType =  React.FC<{\n    variables: IVariableStep,\n    management: IManager[],\n    derivatives: IDerivative,\n    validity: IValidation['derivativeStep'];\n    updateDfDx: (fIndex: number, xIndex: number) => (dfdx: any) => void;\n    updateDfDu: (fIndex: number, uIndex: number) => (dfdu: any) => void;\n}>;\nconst Derivatives: DerivativesType = ({variables, management, derivatives, validity, updateDfDx, updateDfDu}) => {\n    return (\n        <div className=\"column\">\n            <Paper className=\"column Paper\">\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell></TableCell>\n                            {variables.vars.map((v, i) => (\n                                <TableCell key={i}>\n                                    f{i}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {variables.vars.map((v, i) => (\n                            <TableRow key={i}>\n                                <TableCell component=\"th\" scope=\"row\" className=\"row\">\n                                    <span>\n                                        x{i}\n                                    </span>\n                                </TableCell>\n                                {\n                                    derivatives.dfdx[i].map((dfdx, k) => (\n                                        <TableCell key={k} className=\"column\">\n                                            <TextField\n                                                onChange={updateDfDx(i, k)}\n                                                label={`df${i}/dx${k}`}\n                                                error={!validity.valid && validity.passed && !dfdx}\n                                                value={dfdx}/>\n                                            {!validity.valid && validity.passed && !dfdx && (\n                                                <FormHelperText error={true}>{`Укажите функцию df${i}/dx${k}`}</FormHelperText>\n                                            )}\n                                        </TableCell>\n                                    )\n                                )}\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Paper>\n\n            <Paper className=\"column Paper\">\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell></TableCell>\n                            {variables.vars.map((v, i) => (\n                                <TableCell key={i}>\n                                    f{i}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {management.map((v, k) => (\n                            <TableRow key={k}>\n                                <TableCell component=\"th\" scope=\"row\" className=\"row\">\n                                    <span>\n                                        u{k}\n                                    </span>\n                                </TableCell>\n                                {\n                                    variables.vars.map((v, i) => (\n                                        <TableCell key={i} className=\"column\">\n                                            <TextField\n                                                onChange={updateDfDu(i, k)}\n                                                label={`df${i}/du${k}`}\n                                                error={!validity.valid && validity.passed && !derivatives.dfdu[i][k]}\n                                                value={derivatives.dfdu[i][k]}/>\n                                            {!validity.valid && validity.passed && !derivatives.dfdu[i][k] && (\n                                                <FormHelperText error={true}>{`Укажите функцию df${i}/du${k}`}</FormHelperText>\n                                            )}\n                                        </TableCell>\n                                    )\n                                )}\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Paper>\n        </div>\n    );\n}\n\nexport default connect(\n    (state: IState) => ({\n        variables: state.editingTask.variableStep,\n        management: state.editingTask.managementStep,\n        derivatives: state.editingTask.derivativeStep,\n        validity: state.editingTask.validation.derivativeStep\n    }),\n    dispatch => ({\n        updateDfDx: (fIndex: number, xIndex: number) => (payload: any) => dispatch({ type: 'DFDX_UPDATE', payload: {\n            fIndex,\n            xIndex,\n            dfdx: payload.target.value\n        } }),\n        updateDfDu: (fIndex: number, uIndex: number) => (payload: any) => dispatch({ type: 'DFDU_UPDATE', payload: {\n            fIndex,\n            uIndex,\n            dfdu: payload.target.value\n        }}),\n    })\n)(Derivatives);","const Method: React.FC = () => {\n    return null;\n}\n\nexport default Method;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { StepButton, StepLabel } from '@material-ui/core';\nimport { connect } from 'react-redux';\n\nimport Functional from './subforms/Functional';\nimport Variables from './subforms/Variables';\nimport Management from './subforms/Management';\nimport Derivatives from './subforms/Derivatives';\nimport Method from './subforms/Method';\nimport { IState, IValidation, TaskStep } from '../../store/state';\nimport { IValidityUpdate } from '../../store/task-reducer';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%',\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction getSteps() {\n  return [\n        {\n            label: 'Целевая функция',\n            content: <Functional/>\n        },\n        {\n            label: 'Фазовые и сопряженные переменные',\n            content: <Variables/>\n        },\n        {\n            label: 'Структура управления',\n            content: <Management/>\n        },\n        {\n            label: 'Производные',\n            content: <Derivatives/>\n        },\n        {\n            label: 'Конфигурация метода',\n            content: <Method/>\n        }\n    ];\n}\n\ntype CreateTaskType = React.FC<{validity: IValidation, updateValidity: (payload: IValidityUpdate) => void, reset: () => void}>;\nconst CreateTask: CreateTaskType = ({validity, updateValidity, reset}) => {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(3);\n    const steps = getSteps();\n\n    // Перемещение по шагам\n    const handleStep = (step: number) => () => {\n        if (step !== activeStep) {\n            const validityStep = validity[TaskStep[activeStep] as keyof IValidation];\n            updateValidity({\n                key: TaskStep[activeStep],\n                value: {\n                    ...validityStep,\n                    passed: true\n                }\n            })\n            setActiveStep(step);\n        }\n    };\n    // Сброс формы\n    const handleReset = () => {\n        setActiveStep(0);\n        reset();\n    };\n    const handleRun = () => {};\n    const handleImport = () => {};\n    const handleExport = () => {};\n\n    return (\n      <div className={classes.root}>\n        <Paper square elevation={0} className={classes.resetContainer}>\n            <Typography><span>Пожалуйста, заполните условия задачи или импортируйте из csv.</span></Typography>\n            <Button onClick={handleImport} className={classes.button} disabled={true}>\n                Импорт из csv\n            </Button>\n            <Button onClick={handleExport} className={classes.button} disabled={true}>\n                Экспорт в csv\n            </Button>\n            <Button onClick={handleReset} className={classes.button}>\n                Сбросить\n            </Button>\n            <Button onClick={handleRun} className={classes.button} disabled={true}>\n                Запустить решение\n            </Button>\n        </Paper>\n        <Stepper nonLinear activeStep={activeStep} orientation=\"vertical\">\n          {steps.map((step, index) => {\n              const validityStep = validity[TaskStep[index] as keyof IValidation];\n              return (\n            <Step key={step.label} >\n                <StepButton onClick={handleStep(index)} disableRipple>\n                    <StepLabel error={!validityStep.valid && validityStep.passed}>{step.label}</StepLabel>\n                </StepButton>\n                <StepContent>\n                    {step.content}\n                    <div className={classes.actionsContainer}>\n                        {/* <div>\n                            <Button\n                                disabled={activeStep === 0}\n                                onClick={handleStep(index - 1)}\n                                className={classes.button}\n                            >\n                                Перейти к предыдущему шагу\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleStep(index + 1)}\n                                className={classes.button}\n                                >\n                                {activeStep === steps.length - 1 ? 'Завершить' : 'Перейти к следующему шагу'}\n                            </Button>\n                        </div> */}\n                    </div>\n                </StepContent>\n            </Step>\n          )})}\n        </Stepper>\n        {activeStep === steps.length && (\n            <Paper square elevation={0} className={classes.resetContainer}>\n                <Typography><span>Все данные введены.</span></Typography>\n            </Paper>\n        )}\n      </div>\n    );\n}\n\nexport default connect(\n    (state: IState) => ({\n        validity: state.editingTask.validation\n    }),\n    dispatch => ({\n        updateValidity: (payload: IValidityUpdate) => dispatch({ type: 'VALIDITY_UPDATE', payload }),\n        reset: () => dispatch({ type: 'RESET' }),\n    })\n)(CreateTask);","const History: React.FC = () => {\n    return null;\n}\n\nexport default History;","import React from 'react';\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\nimport './App.css';\nimport CreateTask from './pages/create-task/CreateTask';\nimport History from './pages/history/History';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div>\n        <div className=\"App-header\">\n          <div className=\"App-header-logo\">\n            <img src=\"/smart-control-logo.png\" alt=\"\"/>\n          </div>\n          <ul>\n            <li>\n              <NavLink to=\"/\" exact className=\"App-link\" activeClassName=\"App-link_active\">Создать задачу</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/history\" className=\"App-link\" activeClassName=\"App-link_active\">История задач</NavLink>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"App-outlet\">\n          <Route exact path=\"/\" component={CreateTask} />\n          {/* <Route path=\"/about\" component={About} /> */}\n          <Route path=\"/topics\" component={History} />\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { initialState, IState } from './state';\nimport { Reducer } from 'redux';\n\nexport default (consumer: any): Reducer<IState> => (state = initialState, action) => {\n    try {\n        return consumer[action.type](state, action.payload);\n    } catch {\n        return state;\n    }\n};\n","import { IState, IFunctional } from '../state';\n\nexport default {\n    FUNCTIONAL_UPDATE(state: IState, action: IFunctional) {\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                functionalStep: {\n                    ...action,\n                    t0: action.t0 || 0,\n                    T: action.T || 1,\n                },\n                validation: {\n                    ...state.editingTask.validation,\n                    functionalStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: !!((action as IFunctional).functional) &&\n                            state.editingTask.functionalStep.constants.every(constant => !!(constant.key && constant.value))\n                    }\n                }\n            },\n        };\n    },\n    CONSTANT_ADD(state: IState) {\n        const constants = [\n            ...state.editingTask.functionalStep.constants,\n            {key: '', value: ''}\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                functionalStep: {\n                    ...state.editingTask.functionalStep,\n                    constants: constants\n                },\n                validation: {\n                    ...state.editingTask.validation,\n                    functionalStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: false\n                    }\n                }\n            },\n        };\n    },\n    CONSTANT_UPDATE(state: IState, payload: {\n        constantIndex: number,\n        prop: 'key' | 'value',\n        value: string\n    }) {\n        const constants = [\n            ...state.editingTask.functionalStep.constants.slice(0, payload.constantIndex),\n            {...state.editingTask.functionalStep.constants[payload.constantIndex], [payload.prop]: payload.value},\n            ...state.editingTask.functionalStep.constants.slice(payload.constantIndex + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                functionalStep: {\n                    ...state.editingTask.functionalStep,\n                    constants: constants\n                },\n                validation: {\n                    ...state.editingTask.validation,\n                    functionalStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: state.editingTask.functionalStep.functional &&\n                            state.editingTask.functionalStep.constants.every(constant => !!(constant.key && constant.value))\n                    }\n                }\n            },\n        };\n    },\n    CONSTANT_REMOVE(state: IState, payload: number) {\n        const constants = state.editingTask.functionalStep.constants.filter((v, i) => i !== payload);\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                functionalStep: {\n                    ...state.editingTask.functionalStep,\n                    constants: constants\n                },\n                validation: {\n                    ...state.editingTask.validation,\n                    functionalStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: state.editingTask.functionalStep.functional &&\n                            state.editingTask.functionalStep.constants.every(constant => !!(constant.key && constant.value))\n                    }\n                }\n            },\n        };\n    }\n}","import { IState, IVariable, getEmptyVariable } from '../state';\n\nexport default {\n    VARIABLE_UPDATE(state: IState, action: {var: IVariable; index: number}) {\n        const vars = [\n            ...state.editingTask.variableStep.vars.slice(0, action.index),\n            {\n                ...action.var,\n                t0: action.var.xt0 || 0,\n                T: action.var.pT || 1,\n            },\n            ...state.editingTask.variableStep.vars.slice(action.index + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                variableStep: {\n                    vars,\n                },\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: vars.every(v => !!(v.f && v.p))\n                    }\n                }\n            }\n        }\n    },\n    VARIABLE_ADD(state: IState) {\n        const allVars = [\n            ...state.editingTask.variableStep.vars,\n            getEmptyVariable(),\n        ];\n        const newDfDx = [\n            ...state.editingTask.derivativeStep.dfdx.map(row => [...row, '']),\n            Array(allVars.length).fill('')\n        ];\n        const newDfDu = [\n            ...state.editingTask.derivativeStep.dfdu,\n            Array(state.editingTask.managementStep.length).fill('')\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                variableStep: {\n                    vars: allVars\n                },\n                derivativeStep: {\n                    dfdx: newDfDx,\n                    dfdu: newDfDu\n                },\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: allVars.every(v => !!(v.f && v.p))\n                    },\n                    derivativeStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: false\n                    }\n                }\n            }\n        };\n    },\n    VARIABLE_REMOVE(state: IState, action: number) {\n        const leftVars = [\n            ...state.editingTask.variableStep.vars.slice(0, action),\n            ...state.editingTask.variableStep.vars.slice(action + 1),\n        ];\n        const newDfDx = state.editingTask.derivativeStep.dfdx\n            .filter((row, i) => i !== action)\n            .map((row, i) => row.filter((dfdx, i) => i !== action));\n\n        const newDfDu = state.editingTask.derivativeStep.dfdu\n            .filter((row, i) => i !== action);\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                variableStep: {\n                    vars: leftVars\n                },\n                derivativeStep: {\n                    dfdx: newDfDx,\n                    dfdu: newDfDu\n                },\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: leftVars.every(v => !!(v.f && v.p))\n                    },\n                    derivativeStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: newDfDx.every(row => row.every(Boolean)) && newDfDu.every(row => row.every(Boolean))\n                    }\n                }\n            }\n        };\n    }\n}","import { IState, IFunctional, getEmptyManager, IManager } from '../state';\n\nexport default {\n    MANAGER_ADD(state: IState, action: IFunctional) {\n        const withNewManager = [\n            ...state.editingTask.managementStep,\n            getEmptyManager()\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withNewManager,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withNewManager.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        };\n    },\n    MANAGER_UPDATE(state: IState, action: {\n        key: keyof IManager,\n        value: any,\n        index: number\n    }) {\n        const updatingManager = state.editingTask.managementStep[action.index];\n        const withEdittedManager = [\n            ...state.editingTask.managementStep.slice(0, action.index),\n            {\n                ...updatingManager,\n                [action.key]: action.value\n            },\n            ...state.editingTask.managementStep.slice(action.index + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withEdittedManager,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withEdittedManager.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        }\n    },\n    MANAGER_REMOVE(state: IState, action: number) {\n        const withDelettedManager = state.editingTask.managementStep.filter((m, i) => i !== action);\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withDelettedManager,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withDelettedManager.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        }\n    },\n    DUDV_UPDATE(state: IState, action: {\n        value: string,\n        manager: number,\n        dudv: number\n    }) {\n        const updatingManager = state.editingTask.managementStep[action.manager];\n        const withEdittedManager = [\n            ...state.editingTask.managementStep.slice(0, action.manager),\n            {\n                ...updatingManager,\n                dudv: [\n                    ...updatingManager.dudv.slice(0, action.dudv),\n                    action.value,\n                    ...updatingManager.dudv.slice(action.dudv + 1),\n                ]\n            },\n            ...state.editingTask.managementStep.slice(action.manager + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withEdittedManager,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withEdittedManager.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        }\n    },\n    V_UPDATE(state: IState, action: {\n        value: number,\n        manager: number,\n        interval: number,\n        v: number\n    }) {\n        const updatingManager = state.editingTask.managementStep[action.manager];\n        const withEdittedManager = [\n            ...state.editingTask.managementStep.slice(0, action.manager),\n            {\n                ...updatingManager,\n                v: [\n                    ...updatingManager.v.slice(0, action.interval),\n                    [\n                        ...updatingManager.v[action.interval].slice(0, action.v),\n                        action.value || 0,\n                        ...updatingManager.v[action.interval].slice(action.v + 1),\n                    ],\n                    ...updatingManager.v.slice(action.interval + 1),\n                ]\n            },\n            ...state.editingTask.managementStep.slice(action.manager + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withEdittedManager,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withEdittedManager.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        }\n    },\n    TK_UPDATE(state: IState, action: {\n        value: number,\n        manager: number,\n        interval: number\n    }) {\n        const updatingManager = state.editingTask.managementStep[action.manager];\n        const withEdittedManager = [\n            ...state.editingTask.managementStep.slice(0, action.manager),\n            {\n                ...updatingManager,\n                tk: [\n                    ...updatingManager.tk.slice(0, action.interval),\n                    action.value || 0,\n                    ...updatingManager.tk.slice(action.interval + 1),\n                ]\n            },\n            ...state.editingTask.managementStep.slice(action.manager + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withEdittedManager,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withEdittedManager.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        }\n    },\n    PARAMETER_ADD(state: IState, action: number) {\n        const managerWithNewParameter = state.editingTask.managementStep[action];\n        const withNewParametr = [\n            ...state.editingTask.managementStep.slice(0, action),\n            {\n                ...managerWithNewParameter,\n                v: managerWithNewParameter.v.map(interval => [...interval, 0]),\n                dudv: [...managerWithNewParameter.dudv, '']\n            },\n            ...state.editingTask.managementStep.slice(action + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withNewParametr,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withNewParametr.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        };\n    },\n    PARAMETER_REMOVE(state: IState, action:  {manager: number, parameter: number}) {\n        const managerWithDelettingParameter = state.editingTask.managementStep[action.manager];\n        const withDeletedParameter = [\n            ...state.editingTask.managementStep.slice(0, action.manager),\n            {\n                ...managerWithDelettingParameter,\n                v: managerWithDelettingParameter.v.map(interval => interval.filter((v, i) => i !== action.parameter)),\n                dudv: managerWithDelettingParameter.dudv.filter((v, i) => i !== action.parameter)\n            },\n            ...state.editingTask.managementStep.slice(action.manager + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withDeletedParameter,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withDeletedParameter.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        };\n    },\n    TIMESWITCHER_ADD(state: IState, action: number) {\n        const mangerWithNewTimeSwitcher = state.editingTask.managementStep[action];\n        const withNewTimeSwitcher = [\n            ...state.editingTask.managementStep.slice(0, action),\n            {\n                ...mangerWithNewTimeSwitcher,\n                v: [...mangerWithNewTimeSwitcher.v, Array(mangerWithNewTimeSwitcher.dudv.length).fill(0)],\n                tk: [...mangerWithNewTimeSwitcher.tk, 0]\n            },\n            ...state.editingTask.managementStep.slice(action + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withNewTimeSwitcher,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withNewTimeSwitcher.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        };\n    },\n    TIMESWITCHER_REMOVE(state: IState, action: {manager: number, timeswitcher: number}) {\n        const managerWithDelettingTimeSwitcher = state.editingTask.managementStep[action.manager];\n        const withDeletedTimeSwitcher = [\n            ...state.editingTask.managementStep.slice(0, action.manager),\n            {\n                ...managerWithDelettingTimeSwitcher,\n                v: managerWithDelettingTimeSwitcher.v.filter((interval, i) => i !== action.timeswitcher),\n                tk: managerWithDelettingTimeSwitcher.tk.slice(0, managerWithDelettingTimeSwitcher.tk.length - 1)\n            },\n            ...state.editingTask.managementStep.slice(action.manager + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withDeletedTimeSwitcher,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withDeletedTimeSwitcher.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        };\n    }\n}\n\n","import { IState, IVariable, getEmptyVariable } from '../state';\n\nexport default {\n    DFDX_UPDATE(state: IState, action: {\n        fIndex: number,\n        xIndex: number,\n        dfdx: string\n    }) {\n        const derivatives = [\n            ...state.editingTask.derivativeStep.dfdx.slice(0, action.fIndex),\n            [\n                ...state.editingTask.derivativeStep.dfdx[action.fIndex].slice(0, action.xIndex),\n                action.dfdx,\n                ...state.editingTask.derivativeStep.dfdx[action.fIndex].slice(action.xIndex + 1),\n            ],\n            ...state.editingTask.derivativeStep.dfdx.slice(action.fIndex + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                derivativeStep: {\n                    ...state.editingTask.derivativeStep,\n                    dfdx: derivatives\n                },\n                validation: {\n                    ...state.editingTask.validation,\n                    derivativeStep: {\n                        ...state.editingTask.validation.derivativeStep,\n                        valid: derivatives.every(row => row.every(Boolean)) &&\n                            state.editingTask.derivativeStep.dfdu.every(row => row.every(Boolean))\n                    }\n                }\n            }\n        }\n    },\n    DFDU_UPDATE(state: IState, action: {\n        fIndex: number,\n        uIndex: number,\n        dfdu: string\n    }) {\n        const derivatives = [\n            ...state.editingTask.derivativeStep.dfdu.slice(0, action.fIndex),\n            [\n                ...state.editingTask.derivativeStep.dfdu[action.fIndex].slice(0, action.uIndex),\n                action.dfdu,\n                ...state.editingTask.derivativeStep.dfdu[action.fIndex].slice(action.uIndex + 1),\n            ],\n            ...state.editingTask.derivativeStep.dfdu.slice(action.fIndex + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                derivativeStep: {\n                    ...state.editingTask.derivativeStep,\n                    dfdu: derivatives\n                },\n                validation: {\n                    ...state.editingTask.validation,\n                    derivativeStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: derivatives.every(row => row.every(Boolean)) &&\n                            state.editingTask.derivativeStep.dfdx.every(row => row.every(Boolean))\n                    }\n                }\n            }\n        };\n    }\n}","import createReducer from '../createReducer';\nimport functionalReducer from './functional-reducer';\nimport variablesReducer from './variables-reducer';\nimport managementReducer from './management-reducer';\nimport { IState, initialState, IValidation } from '../state';\nimport derivativesReducer from './derivatives-reducer';\n\nexport default createReducer({\n    ...functionalReducer,\n    ...variablesReducer,\n    ...managementReducer,\n    ...derivativesReducer,\n    ...{\n        VALIDITY_UPDATE(state: IState, action: IValidityUpdate){\n            return {\n                ...state,\n                editingTask: {\n                    ...state.editingTask,\n                    validation: {\n                        ...state.editingTask.validation,\n                        [action.key]: action.value\n                    }\n                }\n            }\n        },\n        RESET(state: IState) {\n            return {\n                ...state,\n                editingTask: initialState.editingTask\n            }\n        },\n\n    }\n});\n\nexport interface IValidityUpdate {\n    key: string;\n    value: IState['editingTask']['validation'][keyof IValidation];\n}","import { createStore, combineReducers } from 'redux';\nimport taskReducer from './task-reducer';\nimport { historyReducer } from './history-reducer';\n\n// const rootReducer = combineReducers({\n//   history: historyReducer,\n//   editingForm: taskReducer\n// });\n\nexport default createStore(taskReducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}