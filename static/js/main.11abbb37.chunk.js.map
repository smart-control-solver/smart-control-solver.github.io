{"version":3,"sources":["store/state.ts","pages/create-task/subforms/Functional.tsx","pages/create-task/subforms/Variables.tsx","pages/create-task/subforms/Management.tsx","pages/create-task/subforms/Derivatives.tsx","pages/create-task/subforms/Method.tsx","pages/create-task/SolvingDialog.tsx","pages/create-task/CreateTask.tsx","pages/history/History.tsx","App.tsx","serviceWorker.ts","store/createReducer.ts","store/task-reducer/functional-reducer.ts","store/task-reducer/variables-reducer.ts","store/task-reducer/management-reducer.ts","store/task-reducer/derivatives-reducer.ts","store/task-reducer/method-reducer.ts","store/task-reducer/wasm-reducer.ts","store/task-reducer/index.ts","store/epics/wasm.epic.ts","store/epics/index.ts","store/index.ts","index.tsx"],"names":["TaskStep","useStyles","makeStyles","theme","block","marginTop","spacing","connect","state","functional","task","functionalStep","validity","validation","dispatch","updateFunctional","payload","type","updateConstant","constantIndex","prop","value","target","addConstant","removeConstant","_ref","classes","handleChange","key","Object","objectSpread","defineProperty","react_default","a","createElement","Paper","className","TextField","label","error","valid","passed","onChange","FormHelperText","FormControl","FormControlLabel","control","Checkbox","hasIntegralPart","t0","helperText","T","Typography","variant","Table","TableHead","TableRow","TableCell","TableBody","constants","map","constant","i","component","scope","concat","IconButton","onClick","Delete_default","Button","variables","variableStep","addVariable","updateVariable","removeVariable","handleVarChange","var","vars","index","variable","f","p","xt0","pT","disabled","length","tableHeader","maxWidth","minWidth","tkField","marginLeft","center","alignSelf","management","managementStep","addManager","updateManager","removeManager","updateDudv","j","manager","dudv","updateV","k","interval","v","updateTk","addParameter","removeParameter","parameter","addTimeSwitcher","removeTimeSwitcher","timeswitcher","u","s","row","tk","t","derivatives","derivativeStep","updateDfDx","fIndex","xIndex","dfdx","updateDfDu","uIndex","dfdu","method","methodStep","updateMethod","event","Select","name","MenuItem","step","descr","initialState","g","dgdu","dgdx","history","calculating","worker","Worker","finished","inprogress","progress","statusInfo","fontSize","padding","withRouter","cancel","Dialog","onClose","open","DialogTitle","id","push","root","width","button","marginRight","actionsContainer","marginBottom","resetContainer","updateValidity","reset","start","_React$useState","React","useState","_React$useState2","slicedToArray","activeStep","setActiveStep","steps","content","subforms_Functional","subforms_Variables","subforms_Management","subforms_Derivatives","subforms_Method","handleStep","validityStep","square","elevation","Stepper","nonLinear","orientation","Step","StepButton","disableRipple","StepLabel","StepContent","create_task_SolvingDialog","History","App","react_router_dom","src","alt","to","exact","activeClassName","react_router","path","CreateTask","Boolean","window","location","hostname","match","consumer","functional_reducer","FUNCTIONAL_UPDATE","action","every","CONSTANT_ADD","toConsumableArray","CONSTANT_UPDATE","slice","CONSTANT_REMOVE","filter","variables_reducer","VARIABLE_UPDATE","VARIABLE_ADD","allVars","newDfDx","Array","fill","newDfDu","VARIABLE_REMOVE","leftVars","management_reducer","MANAGER_ADD","withNewManager","m","MANAGER_UPDATE","updatingManager","withEdittedManager","MANAGER_REMOVE","withDelettedManager","DUDV_UPDATE","V_UPDATE","TK_UPDATE","PARAMETER_ADD","managerWithNewParameter","withNewParametr","PARAMETER_REMOVE","managerWithDelettingParameter","withDeletedParameter","TIMESWITCHER_ADD","mangerWithNewTimeSwitcher","withNewTimeSwitcher","TIMESWITCHER_REMOVE","managerWithDelettingTimeSwitcher","withDeletedTimeSwitcher","derivatives_reducer","DFDX_UPDATE","DFDU_UPDATE","method_reducer","METHOD_UPDATE","wasm_reducer","WASM_STARTED","WASM_STOPPED","WASM_NEXT","WASM_COMPLETE","WASM_ERROR","createReducer","functionalReducer","variablesReducer","managementReducer","derivativesReducer","methodReducer","wasmReducer","VALIDITY_UPDATE","editingTask","RESET","arguments","undefined","_unused","wasmEpic","combineEpics","action$","state$","pipe","ofType","tap","console","log","withLatestFrom","switchMap","setTimeout","postMessage","merge","of","fromEvent","pluck","_ref3","epicMiddleware","createEpicMiddleware","ReactDOM","render","es","store","createStore","taskReducer","applyMiddleware","run","rootEpic","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.11abbb37.chunk.js","sourcesContent":["export interface IState {\n    task: ITaskForm;\n    history: any;\n    calculating: {\n        worker: Worker;\n        inprogress: boolean;\n        error: string;\n        progress: any;\n        finished: boolean;\n    };\n}\n\nexport interface ITaskForm extends ITask {\n    validation: IValidation;\n}\n\nexport type IValidation = Record<keyof ITask, {\n    passed: boolean;\n    valid: boolean;\n}>;\n\nexport interface ITask {\n    functionalStep: IFunctional;\n    variableStep: IVariableStep;\n    managementStep: IManager[];\n    derivativeStep: IDerivative;\n    methodStep: IMethod;\n}\n\nexport enum TaskStep {\n    functionalStep,\n    variableStep,\n    managementStep,\n    derivativeStep,\n    methodStep,\n}\n\nexport interface IFunctional {\n    functional: string;\n    t0: number;\n    T: number;\n    constants: {key: string, value: number}[],\n    hasIntegralPart: boolean;\n}\n\nexport interface IVariableStep {\n    /** инфа о фазовых переменых и все что с ней связанно */\n    vars: IVariable[];\n    /** производная интегральной части по управлению.\n     *  внешний массив это одна из интегральных частей конкретной f,\n     *  внутренний массив это конкретное управление для этой f.\n     *  Нужно только если мы решаем задачу ИДУ (задачу с интегро дифференциальной связью)!!!\n     */\n    dgdu?: string[][];\n    /** производная интегральной части по фазовой переменной.\n     *  внешний массив это одна из интегральных частей конкретной f,\n     *  внутренний массив это конкретная фазовая переменная для этой f.\n     *  Нужно только если мы решаем задачу ИДУ (задачу с интегро дифференциальной связью)!!!\n     */\n    dgdx?: string[][];\n}\n\nexport interface IVariable {\n    /** производная фазовой переменной по времени */\n    f: string;\n    /** сопряженная переменная */\n    p: string;\n    /** начальное значение фазовой переменной */\n    xt0: number;\n    /** конечное значение сопраженной */\n    pT: number;\n    /** опциональная интегральная часть функции f.\n     *  Нужно только если мы решаем задачу ИДУ (задачу с интегро дифференциальной связью)!!!\n     */\n    g?: string;\n}\n\nexport const getEmptyVariable = (): IVariable => ({\n    f: '',\n    p: '',\n    xt0: 0,\n    pT: 1,\n    g: '',\n});\n\nexport interface IManager {\n    /** функция управления */\n    u: string;\n    /** массив значений параметров управления.\n     *  внешний массив это конкретный интервал времени,\n     *  а внутренний это значения параметров на этом интервале\n     */\n    v: number[][];\n    /** время точек переключения */\n    tk: number[];\n    /** производная управления по одному из ее параметров */\n    dudv: string[];\n}\n\nexport const getEmptyManager = (): IManager => ({\n    u: '',\n    v: [[0]],\n    tk: [],\n    dudv: ['']\n});\n\nexport interface IDerivative {\n    /** производная f по фазовой переменной.\n     *  внешний массив - это функции f,\n     *  внутренний это производная конкретной фазовой переменной x по этой f\n     */\n    dfdx: string[][];\n    /** производная f по управлению.\n     *  внешний массив - это функции f,\n     *  внутренний это производная конкретного управления u по этой f\n     *  (в первой версии приложения будет только одно управление!!)\n     */\n    dfdu: string[][];\n}\n\nexport interface IMethod {\n    /** название метода */\n    name: 'Newton' | 'Grad';\n    /** численная или аналитическая реализация этого метода */\n    type: 'digit' | 'anal';\n    /** шаг интегрирования */\n    step: number;\n    /** частота дискретизация для кеширования результатов */\n    descr: number;\n}\n\nexport const initialState: IState = {\n    task: {\n        functionalStep: {\n            functional: '',\n            t0: 0,\n            T: 1,\n            constants: [],\n            hasIntegralPart: false\n\n        },\n        variableStep: {\n            vars: [getEmptyVariable()],\n            dgdu: [],\n            dgdx: []\n\n        },\n        managementStep: [getEmptyManager()],\n        derivativeStep: {\n            dfdu: [['']],\n            dfdx: [['']]\n        },\n        methodStep: {\n            name: 'Grad',\n            type: 'digit',\n            step: 1e-6,\n            descr: 40\n        },\n        validation: {\n            functionalStep: {\n                passed: false,\n                valid: false\n            },\n            variableStep: {\n                passed: false,\n                valid: false\n            },\n            managementStep: {\n                passed: false,\n                valid: false\n            },\n            derivativeStep: {\n                passed: false,\n                valid: false\n            },\n            methodStep: {\n                passed: false,\n                valid: true\n            },\n        }\n    },\n    history: null,\n    calculating: {\n        worker: new Worker('/wasm/worker.js'),\n        error: '',\n        finished: false,\n        inprogress: false,\n        progress: null\n    }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n    TextField, FormControl, FormControlLabel, Checkbox, FormHelperText, Paper,\n    Typography, makeStyles, Table, TableHead, TableRow, TableCell, TableBody, Button,\n    IconButton\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { IState, IFunctional, IValidation } from '../../../store/state';\n\nconst useStyles = makeStyles(theme => ({\n    block: {\n      marginTop: theme.spacing(4),\n    },\n  }));\n\n\ntype FunctionalComponent = React.FC<{\n    functional: IFunctional;\n    validity: IValidation['functionalStep'];\n    updateFunctional: (payload: IFunctional) => void;\n    updateConstant: (constantIndex: number, prop: 'key' | 'value') => (payload: any) => void;\n    addConstant: () => void;\n    removeConstant: (payload: number) => () => void;\n}>;\nconst Functional: FunctionalComponent = ({functional, validity, updateFunctional, updateConstant, addConstant, removeConstant}) => {\n        const classes = useStyles();\n        const handleChange = (key: keyof IFunctional) => (payload: any) => {\n            updateFunctional({\n                ...functional,\n                [key]: payload.target.value\n            });\n        };\n\n        return (\n            <Paper className=\"column Paper\">\n                <TextField\n                    label=\"Целевая функция\"\n                    error={!validity.valid && validity.passed && !functional.functional}\n                    onChange={handleChange('functional')}\n                    value={functional.functional}\n                />\n                {!validity.valid && validity.passed && !functional.functional && (\n                    <FormHelperText error={true}>Целевая функция должна быть указана</FormHelperText>\n                )}\n                <FormControl>\n                    <FormControlLabel\n                        control={\n                        <Checkbox value={functional.hasIntegralPart} onChange={handleChange('hasIntegralPart')}/>\n                        }\n                        label=\"Есть интегральная часть\"\n                    />\n                </FormControl>\n                <div className=\"row\">\n                    <TextField\n                        label=\"t0\"\n                        onChange={handleChange('t0')}\n                        type=\"number\"\n                        value={functional.t0}\n                        helperText=\"Начальный момент времени\"\n                    />\n                    <TextField\n                        label=\"T\"\n                        onChange={handleChange('T')}\n                        type=\"number\"\n                        value={functional.T}\n                        helperText=\"Конечный момент времени\"\n                    />\n                </div>\n                <Typography variant=\"h6\" className={classes.block}>\n                    Константы\n                </Typography>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Имя</TableCell>\n                            <TableCell>Значение</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {functional.constants.map((constant, i) => (\n                            <TableRow key={i}>\n                                <TableCell component=\"th\" scope=\"row\" className=\"row\">\n                                    <TextField\n                                        onChange={updateConstant(i, 'key')}\n                                        label={`Имя константы${i}`}\n                                        error={!validity.valid && validity.passed && !constant.key}\n                                        value={constant.key}/>\n                                    {!validity.valid && validity.passed && !constant.key && (\n                                        <FormHelperText error={true}>{`Укажите имя константы`}</FormHelperText>\n                                    )}\n                                </TableCell>\n                                <TableCell className=\"column\">\n                                    <TextField\n                                        onChange={updateConstant(i, 'value')}\n                                        label={`Значение константы${i}`}\n                                        error={!validity.valid && validity.passed && !constant.value}\n                                        type=\"number\"\n                                        value={constant.value}/>\n                                    {!validity.valid && validity.passed && !constant.value && (\n                                        <FormHelperText error={true}>{`Укажите значение константы`}</FormHelperText>\n                                    )}\n                                </TableCell>\n                                <TableCell className=\"column\">\n                                    <IconButton onClick={removeConstant(i)}>\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <Button onClick={addConstant}>\n                    Добавить константу\n                </Button>\n            </Paper>\n        );\n    }\n\n\n\nexport default connect(\n    (state: IState) => ({\n        functional: state.task.functionalStep,\n        validity: state.task.validation.functionalStep\n    }),\n    dispatch => ({\n        updateFunctional: (payload: IFunctional) => dispatch({ type: 'FUNCTIONAL_UPDATE', payload }),\n        updateConstant: (constantIndex: number, prop: 'key' | 'value') => (payload: any) => dispatch({ type: 'CONSTANT_UPDATE', payload: {\n            constantIndex,\n            prop,\n            value: payload.target.value\n        } }),\n        addConstant: () => dispatch({ type: 'CONSTANT_ADD' }),\n        removeConstant: (payload: number) => () => dispatch({ type: 'CONSTANT_REMOVE', payload })\n    })\n)(Functional);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Paper, TextField, FormHelperText, Button, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { IState, IValidation, IVariable, IVariableStep } from '../../../store/state';\n\ntype VariablesComponent = React.FC<{\n    variables: IVariableStep;\n    validity: IValidation['variableStep'];\n    addVariable: () => void;\n    updateVariable: (payload: {var: IVariable; index: number}) => void;\n    removeVariable: (payload: number) => () => void;\n}>;\nconst Variables: VariablesComponent = ({variables, validity, addVariable, updateVariable, removeVariable}) => {\n    const handleVarChange = (key: keyof IVariable, i: number) => (payload: any) => updateVariable({\n        var: {\n            ...variables.vars[i],\n            [key]: payload.target.value\n        },\n        index: i\n    });\n    return (\n        <div className=\"column\">\n            {variables.vars.map((variable, i) => (\n                <Paper className=\"column Paper\" key={i}>\n                    <TextField\n                        label={'Функция фазовой переменной ' + i}\n                        error={!validity.valid && validity.passed && !variable.f}\n                        onChange={handleVarChange('f', i)}\n                        value={variable.f}\n                    />\n                    {!validity.valid && validity.passed && !variable.f && (\n                        <FormHelperText error={true}>{'Укажите функцию dx' + i + '/dt'}</FormHelperText>\n                    )}\n                    <TextField\n                        label={'Функция сопряженной переменной ' + i}\n                        error={!validity.valid && validity.passed && !variable.p}\n                        onChange={handleVarChange('p', i)}\n                        value={variable.p}\n                    />\n                    {!validity.valid && validity.passed && !variable.p && (\n                        <FormHelperText error={true}>{'Укажите функцию p' + i}</FormHelperText>\n                    )}\n                    <div className=\"row\">\n                        <TextField\n                            label=\"x(t0)\"\n                            onChange={handleVarChange('xt0', i)}\n                            type=\"number\"\n                            value={variable.xt0}\n                            helperText={'Начальной значение фазовой переменной ' + i}\n                        />\n                        <TextField\n                            label=\"p(T)\"\n                            onChange={handleVarChange('pT', i)}\n                            type=\"number\"\n                            value={variable.pT}\n                            helperText={'Конечное значение сопряженной переменной ' + i}\n                        />\n                    </div>\n                    <IconButton className=\"close-btn\" onClick={removeVariable(i)} disabled={variables.vars.length === 1}>\n                        <DeleteIcon />\n                    </IconButton>\n                </Paper>\n            ))}\n            <Button onClick={addVariable}>\n                Добавить переменную\n            </Button>\n        </div>\n\n    );\n}\n\nexport default connect(\n    (state: IState) => ({\n        variables: state.task.variableStep,\n        validity: state.task.validation.variableStep\n    }),\n    dispatch => ({\n        addVariable: () => dispatch({ type: 'VARIABLE_ADD' }),\n        updateVariable: (payload: {var: IVariable; index: number}) => dispatch({ type: 'VARIABLE_UPDATE', payload }),\n        removeVariable: (payload: number) => () => dispatch({ type: 'VARIABLE_REMOVE', payload }),\n    })\n)(Variables);","import { IManager, IState, IValidation } from '../../../store/state';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Paper, IconButton, Table, TableHead, TableRow, TableCell, TableBody, TextField, makeStyles } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n    tableHeader: {\n        maxWidth: '200px',\n        minWidth: '120px'\n    },\n    tkField: {\n        maxWidth: '80px',\n        marginLeft: '8px'\n    },\n    center: {\n        alignSelf: 'center'\n    }\n  }));\n\ntype ManagementType = React.FC<{\n    management: IManager[];\n    validity: IValidation['managementStep'];\n\n    addManager: () => void;\n    updateManager: (key: keyof IManager, i: number) => (payload: any) => void;\n    removeManager: (payload: number) => () => void;\n    updateDudv: (i: number, j: number) => (payload: any) => void;\n    updateV: (i: number, j: number, k: number) => (payload: any) => void;\n    updateTk: (i: number, k: number) => (payload: any) => void;\n\n    addParameter: (i: number) => () => void;\n    removeParameter: (i: number, j: number) => () => void;\n    addTimeSwitcher: (payload: number) => () => void;\n    removeTimeSwitcher: (i: number, j: number) => () => void;\n}>;\nconst Management: ManagementType = ({\n    management, validity,\n    addManager, updateManager, removeManager, updateDudv, updateV, updateTk,\n    addParameter, removeParameter,\n    addTimeSwitcher, removeTimeSwitcher\n}) => {\n    const classes = useStyles();\n    return (\n        <div className=\"column\">\n            {management.map((manager, i) => (\n                <Paper className=\"column Paper\" key={i}>\n                    <TextField\n                        label={'Функция управления ' + i}\n                        error={!validity.valid && validity.passed && !manager.u}\n                        onChange={updateManager('u', i)}\n                        value={manager.u}\n                        helperText={!validity.valid && validity.passed && !manager.u && `Укажите функцию u ${i}`}\n                    />\n                    <div className=\"table-scroll-x\">\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell />\n                                    {manager.dudv.map((v, j) => (\n                                        <TableCell key={j}>\n                                            <div className={classes.tableHeader}>\n                                                <span>V{j}</span>\n                                                <IconButton\n                                                    onClick={removeParameter(i, j)}\n                                                    disabled={manager.dudv.length === 1}>\n                                                    <DeleteIcon />\n                                                </IconButton>\n                                            </div>\n                                        </TableCell>\n                                    )) }\n                                    <TableCell />\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        du/dv\n                                    </TableCell>\n                                    {manager.dudv.map((v, s) => (\n                                        <TableCell key={s}>\n                                            <TextField\n                                                onChange={updateDudv(i, s)}\n                                                label={`du${i}/dv${s}`}\n                                                error={!validity.valid && validity.passed && !manager.dudv[s]}\n                                                helperText={!validity.valid && validity.passed && !manager.dudv[s] && `Укажите производную du${i}/dv${s}`}\n                                                value={v}/>\n                                        </TableCell>\n                                    )) }\n                                    <TableCell />\n                                </TableRow>\n                                {manager.v.map((row, k) => (\n                                    <TableRow key={k}>\n                                        <TableCell component=\"th\" scope=\"row\" className=\"row\">\n                                            <span>\n                                                t{k} - {k === manager.v.length - 1 ? 'T' : 't' + (k + 1)}\n                                            </span>\n                                        </TableCell>\n                                        {row.map((v, s) => (\n                                            <TableCell key={s}>\n                                                <TextField\n                                                    type=\"number\"\n                                                    label={`Значение v${s}`}\n                                                    helperText={`на интервале t${k} - ${k === manager.v.length - 1 ? 'T' : 't' + (k + 1)}`}\n                                                    onChange={updateV(i, k, s)}\n                                                    value={v}/>\n                                            </TableCell>\n                                        )) }\n                                        <TableCell>\n                                            <IconButton onClick={removeTimeSwitcher(i, k)} disabled={manager.v.length === 1}>\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </div>\n\n                    {!!(manager.tk.length) && (\n                        <div className=\"table-scroll-x\">\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell></TableCell>\n                                        <TableCell>\n                                            Момент переключения\n                                        </TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {manager.tk.map((t, k) => (\n                                        <TableRow key={k}>\n                                            <TableCell component=\"th\" scope=\"row\" className=\"row\">\n                                                <span>\n                                                    {'t' + (k + 1)}\n                                                </span>\n                                            </TableCell>\n                                            <TableCell>\n                                                <TextField\n                                                    type=\"number\"\n                                                    className={classes.tkField}\n                                                    onChange={updateTk(i, k)}\n                                                    value={t}/>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    )}\n\n                    <div className={classes.center + ' row'}>\n                        <Button onClick={addTimeSwitcher(i)}>\n                            Добавить момент переключения\n                        </Button>\n                        <Button onClick={addParameter(i)}>\n                            Добавить параметр управления\n                        </Button>\n                    </div>\n\n\n                    {/* <IconButton className=\"close-btn\" onClick={removeManager(i)} disabled={management.length === 1}>\n                        <DeleteIcon />\n                    </IconButton> */}\n                </Paper>\n            ))}\n            {/* <Button onClick={addManager}>\n                Добавить управление\n            </Button> */}\n        </div>\n    );\n}\n\nexport default connect(\n    (state: IState) => ({\n        management: state.task.managementStep,\n        validity: state.task.validation.managementStep\n    }),\n    dispatch => ({\n        addManager: () => dispatch({ type: 'MANAGER_ADD' }),\n        updateManager: (key: keyof IManager, i: number) => (payload: any) => dispatch({\n            type: 'MANAGER_UPDATE',\n            payload: {\n                key,\n                value: payload.target.value,\n                index: i\n            }\n        }),\n        removeManager: (payload: number) => () => dispatch({ type: 'MANAGER_REMOVE', payload }),\n        updateDudv: (i: number, j: number) => (payload: any) => dispatch({\n            type: 'DUDV_UPDATE',\n            payload: {\n                value: payload.target.value,\n                manager: i,\n                dudv: j\n            }\n        }),\n        updateV: (i: number, j: number, k: number) => (payload: any) => dispatch({\n            type: 'V_UPDATE',\n            payload: {\n                value: payload.target.value,\n                manager: i,\n                interval: j,\n                v: k\n            }\n        }),\n        updateTk: (i: number, k: number) => (payload: any) => dispatch({\n            type: 'TK_UPDATE',\n            payload: {\n                value: payload.target.value,\n                manager: i,\n                interval: k,\n            }\n        }),\n\n        addParameter: (payload: number) => () => dispatch({ type: 'PARAMETER_ADD', payload }),\n        removeParameter: (i: number, j: number) => () => dispatch({ type: 'PARAMETER_REMOVE', payload: {manager: i, parameter: j} }),\n        addTimeSwitcher: (payload: number) => () => dispatch({ type: 'TIMESWITCHER_ADD', payload }),\n        removeTimeSwitcher: (i: number, j: number) => () => dispatch({ type: 'TIMESWITCHER_REMOVE', payload: {manager: i, timeswitcher: j} }),\n    })\n)(Management);","import { IManager, IState, IValidation, IVariableStep, IDerivative } from '../../../store/state';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TextField, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    tableHeader: {\n        maxWidth: '200px',\n        minWidth: '120px'\n    }\n  }));\n\ntype DerivativesType =  React.FC<{\n    variables: IVariableStep,\n    management: IManager[],\n    derivatives: IDerivative,\n    validity: IValidation['derivativeStep'];\n    updateDfDx: (fIndex: number, xIndex: number) => (dfdx: any) => void;\n    updateDfDu: (fIndex: number, uIndex: number) => (dfdu: any) => void;\n}>;\nconst Derivatives: DerivativesType = ({variables, management, derivatives, validity, updateDfDx, updateDfDu}) => {\n    const classes = useStyles();\n    return (\n        <div className=\"column\">\n            <Paper className=\"Paper\">\n                <div className=\"table-scroll-x\">\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell></TableCell>\n                                {variables.vars.map((v, i) => (\n                                    <TableCell key={i} className={classes.tableHeader}>\n                                        f{i}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {variables.vars.map((v, i) => (\n                                <TableRow key={i}>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"row\">\n                                        <span>\n                                            x{i}\n                                        </span>\n                                    </TableCell>\n                                    {\n                                        derivatives.dfdx[i].map((dfdx, k) => (\n                                            <TableCell key={k} className=\"column\">\n                                                <TextField\n                                                    onChange={updateDfDx(i, k)}\n                                                    label={`df${i}/dx${k}`}\n                                                    error={!validity.valid && validity.passed && !dfdx}\n                                                    helperText={!validity.valid && validity.passed && !dfdx && `Укажите функцию df${i}/dx${k}`}\n                                                    value={dfdx}/>\n                                            </TableCell>\n                                        )\n                                    )}\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </div>\n            </Paper>\n\n            <Paper className=\"Paper\">\n                <div className=\"table-scroll-x\">\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell></TableCell>\n                                {variables.vars.map((v, i) => (\n                                    <TableCell key={i} className={classes.tableHeader}>\n                                        f{i}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {management.map((v, k) => (\n                                <TableRow key={k}>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"row\">\n                                        <span>\n                                            u{k}\n                                        </span>\n                                    </TableCell>\n                                    {\n                                        variables.vars.map((v, i) => (\n                                            <TableCell key={i} className=\"column\">\n                                                <TextField\n                                                    onChange={updateDfDu(i, k)}\n                                                    label={`df${i}/du${k}`}\n                                                    error={!validity.valid && validity.passed && !derivatives.dfdu[i][k]}\n                                                    helperText={!validity.valid && validity.passed && !derivatives.dfdu[i][k] && `Укажите функцию df${i}/du${k}`}\n                                                    value={derivatives.dfdu[i][k]}/>\n                                            </TableCell>\n                                        )\n                                    )}\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default connect(\n    (state: IState) => ({\n        variables: state.task.variableStep,\n        management: state.task.managementStep,\n        derivatives: state.task.derivativeStep,\n        validity: state.task.validation.derivativeStep\n    }),\n    dispatch => ({\n        updateDfDx: (fIndex: number, xIndex: number) => (payload: any) => dispatch({ type: 'DFDX_UPDATE', payload: {\n            fIndex,\n            xIndex,\n            dfdx: payload.target.value\n        } }),\n        updateDfDu: (fIndex: number, uIndex: number) => (payload: any) => dispatch({ type: 'DFDU_UPDATE', payload: {\n            fIndex,\n            uIndex,\n            dfdu: payload.target.value\n        }}),\n    })\n)(Derivatives);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Paper, Select, MenuItem, TextField } from '@material-ui/core';\nimport { IState, IMethod } from '../../../store/state';\n\n// const useStyles = makeStyles(theme => ({\n//     block: {\n//       marginTop: theme.spacing(4),\n//     },\n// }));\n\ntype MethodComponent = React.FC<{\n    method: IMethod;\n    updateMethod: (key: keyof IMethod) => (event: any) => void;\n}>;\nconst Method: MethodComponent = ({method, updateMethod}) => {\n    return (\n        <Paper className=\"column Paper\">\n            <Select\n                value={method.name}\n                onChange={updateMethod('name')}>\n                <MenuItem value={'Newton'}>Метод Ньютона</MenuItem>\n                <MenuItem value={'Grad'}>Метод градиентного спуска</MenuItem>\n            </Select>\n            <Select\n                value={method.type}\n                onChange={updateMethod('type')}>\n                <MenuItem value={'digit'}>Численный</MenuItem>\n                <MenuItem value={'anal'}>Аналитический</MenuItem>\n            </Select>\n            <div className=\"row\">\n                <TextField\n                    label={'Шаг интегрирования'}\n                    onChange={updateMethod('step')}\n                    type=\"number\"\n                    value={method.step}\n                />\n                <TextField\n                    label={'Частота дискретизация'}\n                    onChange={updateMethod('descr')}\n                    type=\"number\"\n                    value={method.descr}\n                    helperText=\"для кеширования результатов\"\n                />\n            </div>\n        </Paper>\n    );\n}\n\nexport default connect(\n    (state: IState) => ({\n        method: state.task.methodStep,\n    }),\n    dispatch => ({\n        updateMethod: (key: keyof IMethod) => (event: any) => dispatch({ type: 'METHOD_UPDATE', payload: {\n            key,\n            value: event.target.value\n        } }),\n    })\n)(Method);","import React from 'react';\nimport { Dialog, DialogTitle, Button, FormHelperText, makeStyles } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { IState } from '../../store/state';\nimport { withRouter } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  statusInfo: {\n    fontSize: '16px',\n    padding: '16px 24px'\n  }\n})\n\ntype SolvingDialogType = React.FC<{\n  cancel: () => void;\n  history: any;\n  calculating: IState['calculating'];\n}>;\n\nconst SolvingDialog: SolvingDialogType = ({cancel, calculating, history}) => {\n  const classes = useStyles();\n  const showResults = () => history.push('/history');\n\n  return (\n    <Dialog onClose={cancel} open={calculating.inprogress}>\n      <DialogTitle id=\"simple-dialog-title\">Запущено решение</DialogTitle>\n      {!calculating.progress && !calculating.error && !calculating.finished\n        && <FormHelperText className={classes.statusInfo}>Подождите...</FormHelperText>}\n      {calculating.progress && !calculating.error && !calculating.finished\n        && <FormHelperText className={classes.statusInfo}>{calculating.progress}</FormHelperText>}\n      {calculating.error && <FormHelperText error={true} className={classes.statusInfo}>{calculating.error}</FormHelperText>}\n      {calculating.finished && <FormHelperText className={classes.statusInfo}>Решение найдено</FormHelperText>}\n      <Button onClick={cancel}>\n          Отменить\n      </Button>\n      <Button onClick={showResults} disabled={!calculating.finished}>\n          Результаты\n      </Button>\n    </Dialog>\n  );\n}\n\nexport default withRouter<any>(connect(\n  (state: IState) => ({\n    calculating: state.calculating\n  }),\n  dispatch => ({\n      cancel: () => dispatch({ type: 'WASM_CANCEL' }),\n  })\n)(SolvingDialog));","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { StepButton, StepLabel } from '@material-ui/core';\nimport { connect } from 'react-redux';\n\nimport Functional from './subforms/Functional';\nimport Variables from './subforms/Variables';\nimport Management from './subforms/Management';\nimport Derivatives from './subforms/Derivatives';\nimport Method from './subforms/Method';\nimport { IState, IValidation, TaskStep } from '../../store/state';\nimport { IValidityUpdate } from '../../store/task-reducer';\nimport SolvingDialog from './SolvingDialog';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%',\n    maxWidth: '720px'\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction getSteps() {\n  return [\n        {\n            label: 'Целевая функция',\n            content: <Functional/>\n        },\n        {\n            label: 'Фазовые и сопряженные переменные',\n            content: <Variables/>\n        },\n        {\n            label: 'Структура управления',\n            content: <Management/>\n        },\n        {\n            label: 'Производные',\n            content: <Derivatives/>\n        },\n        {\n            label: 'Конфигурация метода',\n            content: <Method/>\n        }\n    ];\n}\n\ntype CreateTaskType = React.FC<{\n    validity: IValidation;\n    updateValidity: (payload: IValidityUpdate) => void;\n    reset: () => void;\n    start: () => void;\n}>;\nconst CreateTask: CreateTaskType = ({validity, updateValidity, reset, start}) => {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(3);\n    const steps = getSteps();\n\n    // Перемещение по шагам\n    const handleStep = (step: number) => () => {\n        if (step !== activeStep) {\n            const validityStep = validity[TaskStep[activeStep] as keyof IValidation];\n            updateValidity({\n                key: TaskStep[activeStep],\n                value: {\n                    ...validityStep,\n                    passed: true\n                }\n            })\n            setActiveStep(step);\n        }\n    };\n    // Сброс формы\n    const handleReset = () => {\n        setActiveStep(0);\n        reset();\n    };\n    const handleRun = () => {\n        setActiveStep(0);\n        if (validity.functionalStep && validity.variableStep && validity.managementStep &&\n            validity.derivativeStep && validity.methodStep\n        ) {\n            start();\n        }\n    };\n    // TODO: разобраться с csv\n    const handleImport = () => {};\n    const handleExport = () => {};\n\n    return (\n      <div className={classes.root}>\n        <Paper square elevation={0} className={classes.resetContainer}>\n            <Typography><span>Пожалуйста, заполните условия задачи или импортируйте из csv.</span></Typography>\n            <Button onClick={handleImport} className={classes.button} disabled={true}>\n                Импорт из csv\n            </Button>\n            <Button onClick={handleExport} className={classes.button} disabled={true}>\n                Экспорт в csv\n            </Button>\n            <Button onClick={handleReset} className={classes.button}>\n                Сбросить\n            </Button>\n            <Button onClick={handleRun} className={classes.button}>\n                Запустить решение\n            </Button>\n        </Paper>\n        <Stepper nonLinear activeStep={activeStep} orientation=\"vertical\">\n          {steps.map((step, index) => {\n              const validityStep = validity[TaskStep[index] as keyof IValidation];\n              return (\n            <Step key={step.label} >\n                <StepButton onClick={handleStep(index)} disableRipple>\n                    <StepLabel error={!validityStep.valid && validityStep.passed}>{step.label}</StepLabel>\n                </StepButton>\n                <StepContent>\n                    {step.content}\n                </StepContent>\n            </Step>\n          )})}\n        </Stepper>\n        {activeStep === steps.length && (\n            <Paper square elevation={0} className={classes.resetContainer}>\n                <Typography><span>Все данные введены.</span></Typography>\n            </Paper>\n        )}\n        <SolvingDialog />\n      </div>\n    );\n}\n\nexport default connect(\n    (state: IState) => ({\n        validity: state.task.validation,\n    }),\n    dispatch => ({\n        updateValidity: (payload: IValidityUpdate) => dispatch({ type: 'VALIDITY_UPDATE', payload }),\n        reset: () => dispatch({ type: 'RESET' }),\n        start: () => dispatch({ type: 'WASM_START' }),\n    })\n)(CreateTask);","const History: React.FC = () => {\n    return null;\n}\n\nexport default History;","import React from 'react';\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\nimport './App.css';\nimport CreateTask from './pages/create-task/CreateTask';\nimport History from './pages/history/History';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div>\n        <div className=\"App-header\">\n          <div className=\"App-header-logo\">\n            <img src=\"/smart-control-logo.png\" alt=\"\"/>\n          </div>\n          <ul>\n            <li>\n              <NavLink to=\"/\" exact className=\"App-link\" activeClassName=\"App-link_active\">Создать задачу</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/history\" className=\"App-link\" activeClassName=\"App-link_active\">История задач</NavLink>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"App-outlet\">\n          <Route exact path=\"/\" component={CreateTask} />\n          {/* <Route path=\"/about\" component={About} /> */}\n          <Route path=\"/history\" component={History} />\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { initialState, IState } from './state';\nimport { Reducer } from 'redux';\n\nexport default (consumer: any): Reducer<IState> => (state = initialState, action) => {\n    try {\n        return consumer[action.type](state, action.payload);\n    } catch {\n        return state;\n    }\n};\n","import { IState, IFunctional } from '../state';\n\nexport default {\n    FUNCTIONAL_UPDATE(state: IState, action: IFunctional) {\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                functionalStep: {\n                    ...action,\n                    t0: action.t0 || 0,\n                    T: action.T || 1,\n                },\n                validation: {\n                    ...state.task.validation,\n                    functionalStep: {\n                        ...state.task.validation.functionalStep,\n                        valid: !!((action as IFunctional).functional) &&\n                            state.task.functionalStep.constants.every(constant => !!(constant.key && constant.value))\n                    }\n                }\n            },\n        };\n    },\n    CONSTANT_ADD(state: IState) {\n        const constants = [\n            ...state.task.functionalStep.constants,\n            {key: '', value: ''}\n        ];\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                functionalStep: {\n                    ...state.task.functionalStep,\n                    constants: constants\n                },\n                validation: {\n                    ...state.task.validation,\n                    functionalStep: {\n                        ...state.task.validation.functionalStep,\n                        valid: false\n                    }\n                }\n            },\n        };\n    },\n    CONSTANT_UPDATE(state: IState, payload: {\n        constantIndex: number,\n        prop: 'key' | 'value',\n        value: string\n    }) {\n        const constants = [\n            ...state.task.functionalStep.constants.slice(0, payload.constantIndex),\n            {...state.task.functionalStep.constants[payload.constantIndex], [payload.prop]: payload.value},\n            ...state.task.functionalStep.constants.slice(payload.constantIndex + 1),\n        ];\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                functionalStep: {\n                    ...state.task.functionalStep,\n                    constants: constants\n                },\n                validation: {\n                    ...state.task.validation,\n                    functionalStep: {\n                        ...state.task.validation.functionalStep,\n                        valid: state.task.functionalStep.functional &&\n                            state.task.functionalStep.constants.every(constant => !!(constant.key && constant.value))\n                    }\n                }\n            },\n        };\n    },\n    CONSTANT_REMOVE(state: IState, payload: number) {\n        const constants = state.task.functionalStep.constants.filter((v, i) => i !== payload);\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                functionalStep: {\n                    ...state.task.functionalStep,\n                    constants: constants\n                },\n                validation: {\n                    ...state.task.validation,\n                    functionalStep: {\n                        ...state.task.validation.functionalStep,\n                        valid: state.task.functionalStep.functional &&\n                            state.task.functionalStep.constants.every(constant => !!(constant.key && constant.value))\n                    }\n                }\n            },\n        };\n    }\n}","import { IState, IVariable, getEmptyVariable } from '../state';\n\nexport default {\n    VARIABLE_UPDATE(state: IState, action: {var: IVariable; index: number}) {\n        const vars = [\n            ...state.task.variableStep.vars.slice(0, action.index),\n            {\n                ...action.var,\n                t0: action.var.xt0 || 0,\n                T: action.var.pT || 1,\n            },\n            ...state.task.variableStep.vars.slice(action.index + 1),\n        ];\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                variableStep: {\n                    vars,\n                },\n                validation: {\n                    ...state.task.validation,\n                    variableStep: {\n                        ...state.task.validation.functionalStep,\n                        valid: vars.every(v => !!(v.f && v.p))\n                    }\n                }\n            }\n        }\n    },\n    VARIABLE_ADD(state: IState) {\n        const allVars = [\n            ...state.task.variableStep.vars,\n            getEmptyVariable(),\n        ];\n        const newDfDx = [\n            ...state.task.derivativeStep.dfdx.map(row => [...row, '']),\n            Array(allVars.length).fill('')\n        ];\n        const newDfDu = [\n            ...state.task.derivativeStep.dfdu,\n            Array(state.task.managementStep.length).fill('')\n        ];\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                variableStep: {\n                    vars: allVars\n                },\n                derivativeStep: {\n                    dfdx: newDfDx,\n                    dfdu: newDfDu\n                },\n                validation: {\n                    ...state.task.validation,\n                    variableStep: {\n                        ...state.task.validation.functionalStep,\n                        valid: allVars.every(v => !!(v.f && v.p))\n                    },\n                    derivativeStep: {\n                        ...state.task.validation.functionalStep,\n                        valid: false\n                    }\n                }\n            }\n        };\n    },\n    VARIABLE_REMOVE(state: IState, action: number) {\n        const leftVars = [\n            ...state.task.variableStep.vars.slice(0, action),\n            ...state.task.variableStep.vars.slice(action + 1),\n        ];\n        const newDfDx = state.task.derivativeStep.dfdx\n            .filter((row, i) => i !== action)\n            .map((row, i) => row.filter((dfdx, i) => i !== action));\n\n        const newDfDu = state.task.derivativeStep.dfdu\n            .filter((row, i) => i !== action);\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                variableStep: {\n                    vars: leftVars\n                },\n                derivativeStep: {\n                    dfdx: newDfDx,\n                    dfdu: newDfDu\n                },\n                validation: {\n                    ...state.task.validation,\n                    variableStep: {\n                        ...state.task.validation.functionalStep,\n                        valid: leftVars.every(v => !!(v.f && v.p))\n                    },\n                    derivativeStep: {\n                        ...state.task.validation.functionalStep,\n                        valid: newDfDx.every(row => row.every(Boolean)) && newDfDu.every(row => row.every(Boolean))\n                    }\n                }\n            }\n        };\n    }\n}","import { IState, IFunctional, getEmptyManager, IManager } from '../state';\n\nexport default {\n    MANAGER_ADD(state: IState, action: IFunctional) {\n        const withNewManager = [\n            ...state.task.managementStep,\n            getEmptyManager()\n        ];\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                managementStep: withNewManager,\n                validation: {\n                    ...state.task.validation,\n                    variableStep: {\n                        ...state.task.validation.managementStep,\n                        valid: withNewManager.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        };\n    },\n    MANAGER_UPDATE(state: IState, action: {\n        key: keyof IManager,\n        value: any,\n        index: number\n    }) {\n        const updatingManager = state.task.managementStep[action.index];\n        const withEdittedManager = [\n            ...state.task.managementStep.slice(0, action.index),\n            {\n                ...updatingManager,\n                [action.key]: action.value\n            },\n            ...state.task.managementStep.slice(action.index + 1),\n        ];\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                managementStep: withEdittedManager,\n                validation: {\n                    ...state.task.validation,\n                    variableStep: {\n                        ...state.task.validation.managementStep,\n                        valid: withEdittedManager.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        }\n    },\n    MANAGER_REMOVE(state: IState, action: number) {\n        const withDelettedManager = state.task.managementStep.filter((m, i) => i !== action);\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                managementStep: withDelettedManager,\n                validation: {\n                    ...state.task.validation,\n                    variableStep: {\n                        ...state.task.validation.managementStep,\n                        valid: withDelettedManager.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        }\n    },\n    DUDV_UPDATE(state: IState, action: {\n        value: string,\n        manager: number,\n        dudv: number\n    }) {\n        const updatingManager = state.task.managementStep[action.manager];\n        const withEdittedManager = [\n            ...state.task.managementStep.slice(0, action.manager),\n            {\n                ...updatingManager,\n                dudv: [\n                    ...updatingManager.dudv.slice(0, action.dudv),\n                    action.value,\n                    ...updatingManager.dudv.slice(action.dudv + 1),\n                ]\n            },\n            ...state.task.managementStep.slice(action.manager + 1),\n        ];\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                managementStep: withEdittedManager,\n                validation: {\n                    ...state.task.validation,\n                    variableStep: {\n                        ...state.task.validation.managementStep,\n                        valid: withEdittedManager.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        }\n    },\n    V_UPDATE(state: IState, action: {\n        value: number,\n        manager: number,\n        interval: number,\n        v: number\n    }) {\n        const updatingManager = state.task.managementStep[action.manager];\n        const withEdittedManager = [\n            ...state.task.managementStep.slice(0, action.manager),\n            {\n                ...updatingManager,\n                v: [\n                    ...updatingManager.v.slice(0, action.interval),\n                    [\n                        ...updatingManager.v[action.interval].slice(0, action.v),\n                        action.value || 0,\n                        ...updatingManager.v[action.interval].slice(action.v + 1),\n                    ],\n                    ...updatingManager.v.slice(action.interval + 1),\n                ]\n            },\n            ...state.task.managementStep.slice(action.manager + 1),\n        ];\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                managementStep: withEdittedManager,\n                validation: {\n                    ...state.task.validation,\n                    variableStep: {\n                        ...state.task.validation.managementStep,\n                        valid: withEdittedManager.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        }\n    },\n    TK_UPDATE(state: IState, action: {\n        value: number,\n        manager: number,\n        interval: number\n    }) {\n        const updatingManager = state.task.managementStep[action.manager];\n        const withEdittedManager = [\n            ...state.task.managementStep.slice(0, action.manager),\n            {\n                ...updatingManager,\n                tk: [\n                    ...updatingManager.tk.slice(0, action.interval),\n                    action.value || 0,\n                    ...updatingManager.tk.slice(action.interval + 1),\n                ]\n            },\n            ...state.task.managementStep.slice(action.manager + 1),\n        ];\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                managementStep: withEdittedManager,\n                validation: {\n                    ...state.task.validation,\n                    variableStep: {\n                        ...state.task.validation.managementStep,\n                        valid: withEdittedManager.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        }\n    },\n    PARAMETER_ADD(state: IState, action: number) {\n        const managerWithNewParameter = state.task.managementStep[action];\n        const withNewParametr = [\n            ...state.task.managementStep.slice(0, action),\n            {\n                ...managerWithNewParameter,\n                v: managerWithNewParameter.v.map(interval => [...interval, 0]),\n                dudv: [...managerWithNewParameter.dudv, '']\n            },\n            ...state.task.managementStep.slice(action + 1),\n        ];\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                managementStep: withNewParametr,\n                validation: {\n                    ...state.task.validation,\n                    variableStep: {\n                        ...state.task.validation.managementStep,\n                        valid: withNewParametr.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        };\n    },\n    PARAMETER_REMOVE(state: IState, action:  {manager: number, parameter: number}) {\n        const managerWithDelettingParameter = state.task.managementStep[action.manager];\n        const withDeletedParameter = [\n            ...state.task.managementStep.slice(0, action.manager),\n            {\n                ...managerWithDelettingParameter,\n                v: managerWithDelettingParameter.v.map(interval => interval.filter((v, i) => i !== action.parameter)),\n                dudv: managerWithDelettingParameter.dudv.filter((v, i) => i !== action.parameter)\n            },\n            ...state.task.managementStep.slice(action.manager + 1),\n        ];\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                managementStep: withDeletedParameter,\n                validation: {\n                    ...state.task.validation,\n                    variableStep: {\n                        ...state.task.validation.managementStep,\n                        valid: withDeletedParameter.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        };\n    },\n    TIMESWITCHER_ADD(state: IState, action: number) {\n        const mangerWithNewTimeSwitcher = state.task.managementStep[action];\n        const withNewTimeSwitcher = [\n            ...state.task.managementStep.slice(0, action),\n            {\n                ...mangerWithNewTimeSwitcher,\n                v: [...mangerWithNewTimeSwitcher.v, Array(mangerWithNewTimeSwitcher.dudv.length).fill(0)],\n                tk: [...mangerWithNewTimeSwitcher.tk, 0]\n            },\n            ...state.task.managementStep.slice(action + 1),\n        ];\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                managementStep: withNewTimeSwitcher,\n                validation: {\n                    ...state.task.validation,\n                    variableStep: {\n                        ...state.task.validation.managementStep,\n                        valid: withNewTimeSwitcher.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        };\n    },\n    TIMESWITCHER_REMOVE(state: IState, action: {manager: number, timeswitcher: number}) {\n        const managerWithDelettingTimeSwitcher = state.task.managementStep[action.manager];\n        const withDeletedTimeSwitcher = [\n            ...state.task.managementStep.slice(0, action.manager),\n            {\n                ...managerWithDelettingTimeSwitcher,\n                v: managerWithDelettingTimeSwitcher.v.filter((interval, i) => i !== action.timeswitcher),\n                tk: managerWithDelettingTimeSwitcher.tk.slice(0, managerWithDelettingTimeSwitcher.tk.length - 1)\n            },\n            ...state.task.managementStep.slice(action.manager + 1),\n        ];\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                managementStep: withDeletedTimeSwitcher,\n                validation: {\n                    ...state.task.validation,\n                    variableStep: {\n                        ...state.task.validation.managementStep,\n                        valid: withDeletedTimeSwitcher.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        };\n    }\n}\n\n","import { IState } from '../state';\n\nexport default {\n    DFDX_UPDATE(state: IState, action: {\n        fIndex: number,\n        xIndex: number,\n        dfdx: string\n    }) {\n        const derivatives = [\n            ...state.task.derivativeStep.dfdx.slice(0, action.fIndex),\n            [\n                ...state.task.derivativeStep.dfdx[action.fIndex].slice(0, action.xIndex),\n                action.dfdx,\n                ...state.task.derivativeStep.dfdx[action.fIndex].slice(action.xIndex + 1),\n            ],\n            ...state.task.derivativeStep.dfdx.slice(action.fIndex + 1),\n        ];\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                derivativeStep: {\n                    ...state.task.derivativeStep,\n                    dfdx: derivatives\n                },\n                validation: {\n                    ...state.task.validation,\n                    derivativeStep: {\n                        ...state.task.validation.derivativeStep,\n                        valid: derivatives.every(row => row.every(Boolean)) &&\n                            state.task.derivativeStep.dfdu.every(row => row.every(Boolean))\n                    }\n                }\n            }\n        }\n    },\n    DFDU_UPDATE(state: IState, action: {\n        fIndex: number,\n        uIndex: number,\n        dfdu: string\n    }) {\n        const derivatives = [\n            ...state.task.derivativeStep.dfdu.slice(0, action.fIndex),\n            [\n                ...state.task.derivativeStep.dfdu[action.fIndex].slice(0, action.uIndex),\n                action.dfdu,\n                ...state.task.derivativeStep.dfdu[action.fIndex].slice(action.uIndex + 1),\n            ],\n            ...state.task.derivativeStep.dfdu.slice(action.fIndex + 1),\n        ];\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                derivativeStep: {\n                    ...state.task.derivativeStep,\n                    dfdu: derivatives\n                },\n                validation: {\n                    ...state.task.validation,\n                    derivativeStep: {\n                        ...state.task.validation.functionalStep,\n                        valid: derivatives.every(row => row.every(Boolean)) &&\n                            state.task.derivativeStep.dfdx.every(row => row.every(Boolean))\n                    }\n                }\n            }\n        };\n    }\n}","import { IState, IMethod } from '../state';\n\nexport default {\n    METHOD_UPDATE(state: IState, action: {key: keyof IMethod; value: any;}) {\n        return {\n            ...state,\n            task: {\n                ...state.task,\n                methodStep: {\n                    ...state.task.methodStep,\n                    [action.key]: action.value\n                },\n            },\n        };\n    },\n}","import { IState } from '../state';\n\nexport default {\n    WASM_STARTED(state: IState) {\n        return {\n            ...state,\n            calculating: {\n                ...state.calculating,\n                inprogress: true\n            }\n        }\n    },\n    WASM_STOPPED(state: IState) {\n        return {\n            ...state,\n            calculating: {\n                ...state.calculating,\n                inprogress: false,\n                finished: false,\n                progress: null,\n                error: ''\n            }\n        }\n    },\n    WASM_NEXT(state: IState, payload: string) {\n        return {\n            ...state,\n            calculating: {\n                ...state.calculating,\n                progress: payload,\n            }\n        }\n    },\n    WASM_COMPLETE(state: IState) {\n        return {\n            ...state,\n            calculating: {\n                ...state.calculating,\n                finished: true,\n            }\n        }\n    },\n    WASM_ERROR(state: IState, payload: string) {\n        return {\n            ...state,\n            calculating: {\n                ...state.calculating,\n                error: payload\n            }\n        }\n    },\n};\n","import createReducer from '../createReducer';\nimport functionalReducer from './functional-reducer';\nimport variablesReducer from './variables-reducer';\nimport managementReducer from './management-reducer';\nimport { IState, initialState, IValidation } from '../state';\nimport derivativesReducer from './derivatives-reducer';\nimport methodReducer from './method-reducer';\nimport wasmReducer from './wasm-reducer';\n\nexport default createReducer({\n    ...functionalReducer,\n    ...variablesReducer,\n    ...managementReducer,\n    ...derivativesReducer,\n    ...methodReducer,\n    ...wasmReducer,\n    ...{\n        VALIDITY_UPDATE(state: IState, action: IValidityUpdate){\n            return {\n                ...state,\n                editingTask: {\n                    ...state.task,\n                    validation: {\n                        ...state.task.validation,\n                        [action.key]: action.value\n                    }\n                }\n            }\n        },\n        RESET(state: IState) {\n            return {\n                ...state,\n                editingTask: initialState.task\n            }\n        },\n\n    }\n});\n\nexport interface IValidityUpdate {\n    key: string;\n    value: IState['task']['validation'][keyof IValidation];\n}","import { ofType, Epic, combineEpics } from 'redux-observable';\nimport { tap, withLatestFrom, pluck, map, switchMap } from 'rxjs/operators';\nimport { IState } from '../state';\nimport { fromEvent, merge, of } from 'rxjs';\nimport { Action } from 'redux';\n\ntype epicType = Epic<Action<any>, any, IState>\n\nconst wasmStartEpic: epicType = (action$, state$) => action$.pipe(\n    ofType('WASM_START'),\n    tap(console.log),\n    withLatestFrom(state$),\n    switchMap(([, state]) => {\n        // заворачиваем в таймаут на случай моментального ответа от воркера, до того, как мы успели подписаться\n        setTimeout(() => state.calculating.worker.postMessage({\n            type: 'solve',\n            task: state.task\n        }));\n        return merge(\n            of({type: 'WASM_STARTED'}),\n            fromEvent(state.calculating.worker, 'message').pipe(pluck('data'))\n        )\n    })\n);\n\nconst wasmCancelEpic: epicType = (action$, state$) => action$.pipe(\n    ofType('WASM_CANCEL'),\n    tap(console.log),\n    withLatestFrom(state$),\n    map(([, state]) => {\n        state.calculating.worker.postMessage({\n            type: 'cancel'\n        })\n        return {type: 'WASM_STOPPED'};\n    })\n);\n\nexport const wasmEpic = combineEpics(\n    wasmStartEpic,\n    wasmCancelEpic\n)","import { combineEpics } from 'redux-observable';\nimport { wasmEpic } from './wasm.epic';\n\nexport default combineEpics(\n  wasmEpic\n);","import { createStore, applyMiddleware } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport taskReducer from './task-reducer';\nimport rootEpic from './epics';\n\nconst epicMiddleware = createEpicMiddleware();\n\nexport default function configureStore() {\n  const store = createStore(\n    taskReducer,\n    applyMiddleware(epicMiddleware)\n  );\n\n  epicMiddleware.run(rootEpic as any);\n\n  return store;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store()}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}